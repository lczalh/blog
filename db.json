{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/2019-2-28 Fastlane自动化打包/7.1问题.png","path":"images/2019-2-28 Fastlane自动化打包/7.1问题.png","modified":0,"renderable":0},{"_id":"source/images/2019-2-28 Fastlane自动化打包/Appfile.png","path":"images/2019-2-28 Fastlane自动化打包/Appfile.png","modified":0,"renderable":0},{"_id":"source/images/2019-2-28 Fastlane自动化打包/Fastfile.png","path":"images/2019-2-28 Fastlane自动化打包/Fastfile.png","modified":0,"renderable":0},{"_id":"source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png","path":"images/2019-2-28 Fastlane自动化打包/fastlane初始化.png","modified":0,"renderable":0},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/app-store.png","path":"images/2019-3-04 XcodeBuild打包ipa/app-store.png","modified":0,"renderable":0},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/ipa.png","path":"images/2019-3-04 XcodeBuild打包ipa/ipa.png","modified":0,"renderable":0},{"_id":"source/images/MAC 安装Tomcat/关闭.png","path":"images/MAC 安装Tomcat/关闭.png","modified":0,"renderable":0},{"_id":"source/images/MAC 安装Tomcat/启动.png","path":"images/MAC 安装Tomcat/启动.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/2019-2-11 hexo搭建/创建仓库.png","path":"images/2019-2-11 hexo搭建/创建仓库.png","modified":0,"renderable":0},{"_id":"source/images/2019-2-28 Fastlane自动化打包/match.png","path":"images/2019-2-28 Fastlane自动化打包/match.png","modified":0,"renderable":0},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/脚本.png","path":"images/2019-3-04 XcodeBuild打包ipa/脚本.png","modified":0,"renderable":0},{"_id":"source/images/MAC 安装Tomcat/下载Tomcat.png","path":"images/MAC 安装Tomcat/下载Tomcat.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/images/2019-2-28 Fastlane自动化打包/ipa.png","path":"images/2019-2-28 Fastlane自动化打包/ipa.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/images/MySQL/运算符.png","path":"images/MySQL/运算符.png","modified":0,"renderable":0},{"_id":"source/images/2019-2-11 hexo搭建/博客效果.png","path":"images/2019-2-11 hexo搭建/博客效果.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"source/images/MySQL/数据类型.png","path":"images/MySQL/数据类型.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1501628194000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1501628194000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1501628194000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1501628194000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1501628194000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1501628194000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1501628194000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1501628194000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1501628194000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1501628194000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1501628194000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1501628194000},{"_id":"themes/next/_config.yml","hash":"cb9df1059c5e321b4766eb61dd64299898cd53d0","modified":1555923228226},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1501628194000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1501628194000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1501628194000},{"_id":"source/_posts/2019-2-12 hexo搭建.md","hash":"6093125c6cb57c8486a31d3cd5a05909630be9be","modified":1555921564328},{"_id":"source/_posts/2019-2-28 Fastlane自动化打包.md","hash":"c0bb4a21600425b532a065cecb15ad0c6c92f1c2","modified":1555921564328},{"_id":"source/_posts/2019-3-04 XcodeBuild打包ipa.md","hash":"041496e4bb964e209f2912f1749d25481cd170f1","modified":1555921564329},{"_id":"source/_posts/2019-3-07 iOS开发记录.md","hash":"e2e7c1a3db3e874d25c0ae8c2ec342f04d969ede","modified":1555921564329},{"_id":"source/_posts/2019-3-28 iOS开发 实时检测网络状态.md","hash":"3481ce936b80173760d42d7740f2c95efa82c51b","modified":1555921564329},{"_id":"source/_posts/2019-4-02 iOS开发 RxDataSources.md","hash":"5e70d644cc2740a74c391f47e2a4bd331564307a","modified":1555921564329},{"_id":"source/_posts/2019-4-16 MySQL.md","hash":"9384f681a4bde7fa311dd2587fce1bb653f591a3","modified":1555921564329},{"_id":"source/_posts/2019-4-17 MAC 显示或隐藏.git目录.md","hash":"f343a2a3f1e5afca4409fd432fdd9eff3209aa38","modified":1555921564329},{"_id":"source/_posts/2019-4-18 MAC 安装Tomcat.md","hash":"934b8657a31d8e36b6dfd6c7967e88543068ab88","modified":1555921564329},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1501628194000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1501628194000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1501628194000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1501628194000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1501628194000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1501628194000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1501628194000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1501628194000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1501628194000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1501628194000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1501628194000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1501628194000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1501628194000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1501628194000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1501628194000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1501628194000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1501628194000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1501628194000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1501628194000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1501628194000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1501628194000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1501628194000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1501628194000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1501628194000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1501628194000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1501628194000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1501628194000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1501628194000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1501628194000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"source/images/2019-2-28 Fastlane自动化打包/7.1问题.png","hash":"cf9e105ea4d529c2a8ecb53f60f6c85ebab6dac8","modified":1555921564333},{"_id":"source/images/2019-2-28 Fastlane自动化打包/Appfile.png","hash":"7bb92716ea336df9e65f7c0354c51ff80f9fc62d","modified":1555921564334},{"_id":"source/images/2019-2-28 Fastlane自动化打包/Fastfile.png","hash":"ace4e2fe1f13f616352653270f3430e1940f483e","modified":1555921564334},{"_id":"source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png","hash":"cec79e727a1ffe020f03479d5ad977c2d49fe434","modified":1555921564334},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/app-store.png","hash":"a53bdca4494e3989238f3131dba4ebb2dec21044","modified":1555921564336},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/ipa.png","hash":"5df2f5d1551838ebc1933a9a433635536ce233d9","modified":1555921564337},{"_id":"source/images/MAC 安装Tomcat/关闭.png","hash":"92df5d9203d586ee606a667b6ece6a740c27f717","modified":1555921564338},{"_id":"source/images/MAC 安装Tomcat/启动.png","hash":"308551453f78e35845ebb41f2c780aad40100166","modified":1555921564339},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501628194000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501628194000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1501628194000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1501628194000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1501628194000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1501628194000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1501628194000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1501628194000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1501628194000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1501628194000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1501628194000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1501628194000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1501628194000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1501628194000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1501628194000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1501628194000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1501628194000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1501628194000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1501628194000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1501628194000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1501628194000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1501628194000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1501628194000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1501628194000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1501628194000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1501628194000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1501628194000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1501628194000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1501628194000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1501628194000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1501628194000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1501628194000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1501628194000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1501628194000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1501628194000},{"_id":"themes/next/source/images/avatar.gif","hash":"7ff23a75ebe6bf0394f17307da860369ee4e21a1","modified":1555921564406},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501628194000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501628194000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501628194000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501628194000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501628194000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1501628194000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1501628194000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501628194000},{"_id":"source/images/2019-2-11 hexo搭建/创建仓库.png","hash":"1cbe103d63ee992c37d8fec3b3e892f1aa16822f","modified":1555921564330},{"_id":"source/images/2019-2-28 Fastlane自动化打包/match.png","hash":"5516e0f43115f3e0db5428968f78b59de58291b7","modified":1555921564336},{"_id":"source/images/2019-3-04 XcodeBuild打包ipa/脚本.png","hash":"6c6bea146068d9bce6800516e3134aa7a2d35269","modified":1555921564338},{"_id":"source/images/MAC 安装Tomcat/下载Tomcat.png","hash":"21d6d50df2017831f09167bd617ccfd6c1c21d0e","modified":1555921564338},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1501628194000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1501628194000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1501628194000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501628194000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1501628194000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501628194000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1501628194000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1501628194000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501628194000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1501628194000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1501628194000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1501628194000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1501628194000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501628194000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1501628194000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1501628194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1501628194000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1501628194000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1501628194000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1501628194000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1501628194000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1501628194000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1501628194000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501628194000},{"_id":"source/images/2019-2-28 Fastlane自动化打包/ipa.png","hash":"ee8b098cfb9915192d6639f9bba8b8133813f0d2","modified":1555921564335},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1501628194000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1501628194000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1501628194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501628194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501628194000},{"_id":"source/images/MySQL/运算符.png","hash":"736e963d225845a4a7c5b5578a03c06df4287514","modified":1555921564345},{"_id":"source/images/2019-2-11 hexo搭建/博客效果.png","hash":"685dec987ec35bb5db4f9e43061b9df379332c12","modified":1555921564333},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1501628194000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1501628194000},{"_id":"source/images/MySQL/数据类型.png","hash":"33417541fc14d2d7a36627db0fd53c8f7553262e","modified":1555921564343},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501628194000},{"_id":"themes/next/.DS_Store","hash":"74ce716c2b1cc25619f5a0906d13d77144cea5f0","modified":1555923046130},{"_id":"themes/next/source/.DS_Store","hash":"c32baba6ec197b06af4401d494c412e1b70200ae","modified":1555922506036},{"_id":"themes/next/source/images/.DS_Store","hash":"edcf9497acad900427d6bb041bd83128b9b2b2ab","modified":1555922855993},{"_id":"themes/next/scripts/.DS_Store","hash":"52a5e67ffa21de1fa41026e2509390e495eb8b35","modified":1555923051140}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"iOS Fastlane自动化打包ipa","date":"2019-02-28T10:00:41.000Z","_content":"\nFastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。[Fastlane文档](https://docs.fastlane.tools/ \"Fastlane文档\")\n\n## 1. 安装Xcode命令行工具\n安装命令: `$ xcode-select --install`\n提示: `xcode-select: error: command line tools are already installed, use \"Software Update\" to install updates`  表示已经安装\n\n## 2. 安装Fastlane\n安装命令: `$ sudo gem install fastlane -NV` 或 `brew cask install fastlane`\n检查是否安装成功 `fastlane --version`\n\n## 3. 初始化Fastlane\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n初始化Fastlane：`$ fastlane init`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png?raw=true \"Fastlane初始化\")\n```\n1. 📸  Automate screenshots (自动化截图)\n2. 👩‍✈️  Automate beta distribution to TestFlight (自动testfilght型配置)\n3. 🚀  Automate App Store distribution (自动发布型配置)\n4. 🛠  Manual setup - manually setup your project to automate your (需要手动配置内容)\n```\n我这里选择 4  等待一下会让你按回车 (共三次)  即安装成功！\n在项目中会生成 fastlane文件夹、Gemfile、Gemfile.lock\nfastlane文件夹：Appfile (存储有关开发者账号相关信息)、Fastfile (核心文件，主要用于 命令行调用和处理具体的流程)\n## 4. 文件配置\n### 4.1 打开Appfile文件 修改以下配置\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Appfile.png?raw=true \"Appfile\")\n### 4.2 打开Fastfile文件 修改以下配置\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Fastfile.png?raw=true \"Fastfile\")\n### 4.3 关于export_method方法\n```\napp-store,   #AppStore正式生产环境包\nad-hoc,  #生产测试包\nenterprise,  #企业包\ndevelopment  #开发测试包\n```\n\n## 5. 证书管理插件\nmatch是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n安装命令: `$ fastlane match init`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/match.png?raw=true \"match\")\n\n### 5.1 先删除旧证书和pp文件\n分别执行以下命令\n```\n$ fastlane match nuke development\n$ fastlane match nuke distribution\n\n```\n\n### 5.2 生成证书和pp文件\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n分别执行以下命令（首次执行时,会要求输入Git仓库密码,用来对证书进行加密,后续其他机器获取证书时使用该密码进行解密）\n```\n$ fastlane match development\n$ fastlane match adhoc\n$ fastlane match appstore\n\n```\n\n## 6. 打包ipa\n打包命: `$ fastlane test`  test是Fastfile文件中的lane名称\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/ipa.png?raw=true \"ipa\")\n\n## 7. 问题\n### 7.1 `Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.`\nXcode 9 之后禁止其直接访问钥匙串, 导致持续集成时执行 xcode build 会出现找不到证书或证书配置文件。修改 fastlane 配置文件来解决\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/7.1问题.png?raw=true \"7.1问题\")\n`export_xcargs: \"-allowProvisioningUpdates\"`\n","source":"_posts/2019-2-28 Fastlane自动化打包.md","raw":"---\nlayout: post\ntitle: \"iOS Fastlane自动化打包ipa\"\ndate: 2019-02-28 18:00:41\ntags: iOS\n---\n\nFastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。[Fastlane文档](https://docs.fastlane.tools/ \"Fastlane文档\")\n\n## 1. 安装Xcode命令行工具\n安装命令: `$ xcode-select --install`\n提示: `xcode-select: error: command line tools are already installed, use \"Software Update\" to install updates`  表示已经安装\n\n## 2. 安装Fastlane\n安装命令: `$ sudo gem install fastlane -NV` 或 `brew cask install fastlane`\n检查是否安装成功 `fastlane --version`\n\n## 3. 初始化Fastlane\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n初始化Fastlane：`$ fastlane init`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png?raw=true \"Fastlane初始化\")\n```\n1. 📸  Automate screenshots (自动化截图)\n2. 👩‍✈️  Automate beta distribution to TestFlight (自动testfilght型配置)\n3. 🚀  Automate App Store distribution (自动发布型配置)\n4. 🛠  Manual setup - manually setup your project to automate your (需要手动配置内容)\n```\n我这里选择 4  等待一下会让你按回车 (共三次)  即安装成功！\n在项目中会生成 fastlane文件夹、Gemfile、Gemfile.lock\nfastlane文件夹：Appfile (存储有关开发者账号相关信息)、Fastfile (核心文件，主要用于 命令行调用和处理具体的流程)\n## 4. 文件配置\n### 4.1 打开Appfile文件 修改以下配置\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Appfile.png?raw=true \"Appfile\")\n### 4.2 打开Fastfile文件 修改以下配置\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Fastfile.png?raw=true \"Fastfile\")\n### 4.3 关于export_method方法\n```\napp-store,   #AppStore正式生产环境包\nad-hoc,  #生产测试包\nenterprise,  #企业包\ndevelopment  #开发测试包\n```\n\n## 5. 证书管理插件\nmatch是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n安装命令: `$ fastlane match init`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/match.png?raw=true \"match\")\n\n### 5.1 先删除旧证书和pp文件\n分别执行以下命令\n```\n$ fastlane match nuke development\n$ fastlane match nuke distribution\n\n```\n\n### 5.2 生成证书和pp文件\ncd到项目路径：`$ cd /Users/tanitsubukousha/Desktop/GLGL`\n分别执行以下命令（首次执行时,会要求输入Git仓库密码,用来对证书进行加密,后续其他机器获取证书时使用该密码进行解密）\n```\n$ fastlane match development\n$ fastlane match adhoc\n$ fastlane match appstore\n\n```\n\n## 6. 打包ipa\n打包命: `$ fastlane test`  test是Fastfile文件中的lane名称\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/ipa.png?raw=true \"ipa\")\n\n## 7. 问题\n### 7.1 `Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.`\nXcode 9 之后禁止其直接访问钥匙串, 导致持续集成时执行 xcode build 会出现找不到证书或证书配置文件。修改 fastlane 配置文件来解决\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/7.1问题.png?raw=true \"7.1问题\")\n`export_xcargs: \"-allowProvisioningUpdates\"`\n","slug":"2019-2-28 Fastlane自动化打包","published":1,"updated":"2019-04-22T08:26:04.328Z","comments":1,"photos":[],"link":"","_id":"cjus3pzgt0000ss7doanpmzg0","content":"<p>Fastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。<a href=\"https://docs.fastlane.tools/\" title=\"Fastlane文档\" target=\"_blank\" rel=\"noopener\">Fastlane文档</a></p>\n<h2 id=\"1-安装Xcode命令行工具\"><a href=\"#1-安装Xcode命令行工具\" class=\"headerlink\" title=\"1. 安装Xcode命令行工具\"></a>1. 安装Xcode命令行工具</h2><p>安装命令: <code>$ xcode-select --install</code><br>提示: <code>xcode-select: error: command line tools are already installed, use &quot;Software Update&quot; to install updates</code>  表示已经安装</p>\n<h2 id=\"2-安装Fastlane\"><a href=\"#2-安装Fastlane\" class=\"headerlink\" title=\"2. 安装Fastlane\"></a>2. 安装Fastlane</h2><p>安装命令: <code>$ sudo gem install fastlane -NV</code> 或 <code>brew cask install fastlane</code><br>检查是否安装成功 <code>fastlane --version</code></p>\n<h2 id=\"3-初始化Fastlane\"><a href=\"#3-初始化Fastlane\" class=\"headerlink\" title=\"3. 初始化Fastlane\"></a>3. 初始化Fastlane</h2><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>初始化Fastlane：<code>$ fastlane init</code><br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png?raw=true\" alt=\"markdown\" title=\"Fastlane初始化\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 📸  Automate screenshots (自动化截图)</span><br><span class=\"line\">2. 👩‍✈️  Automate beta distribution to TestFlight (自动testfilght型配置)</span><br><span class=\"line\">3. 🚀  Automate App Store distribution (自动发布型配置)</span><br><span class=\"line\">4. 🛠  Manual setup - manually setup your project to automate your (需要手动配置内容)</span><br></pre></td></tr></table></figure></p>\n<p>我这里选择 4  等待一下会让你按回车 (共三次)  即安装成功！<br>在项目中会生成 fastlane文件夹、Gemfile、Gemfile.lock<br>fastlane文件夹：Appfile (存储有关开发者账号相关信息)、Fastfile (核心文件，主要用于 命令行调用和处理具体的流程)</p>\n<h2 id=\"4-文件配置\"><a href=\"#4-文件配置\" class=\"headerlink\" title=\"4. 文件配置\"></a>4. 文件配置</h2><h3 id=\"4-1-打开Appfile文件-修改以下配置\"><a href=\"#4-1-打开Appfile文件-修改以下配置\" class=\"headerlink\" title=\"4.1 打开Appfile文件 修改以下配置\"></a>4.1 打开Appfile文件 修改以下配置</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Appfile.png?raw=true\" alt=\"markdown\" title=\"Appfile\"></p>\n<h3 id=\"4-2-打开Fastfile文件-修改以下配置\"><a href=\"#4-2-打开Fastfile文件-修改以下配置\" class=\"headerlink\" title=\"4.2 打开Fastfile文件 修改以下配置\"></a>4.2 打开Fastfile文件 修改以下配置</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Fastfile.png?raw=true\" alt=\"markdown\" title=\"Fastfile\"></p>\n<h3 id=\"4-3-关于export-method方法\"><a href=\"#4-3-关于export-method方法\" class=\"headerlink\" title=\"4.3 关于export_method方法\"></a>4.3 关于export_method方法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store,   #AppStore正式生产环境包</span><br><span class=\"line\">ad-hoc,  #生产测试包</span><br><span class=\"line\">enterprise,  #企业包</span><br><span class=\"line\">development  #开发测试包</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-证书管理插件\"><a href=\"#5-证书管理插件\" class=\"headerlink\" title=\"5. 证书管理插件\"></a>5. 证书管理插件</h2><p>match是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中<br>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>安装命令: <code>$ fastlane match init</code><br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/match.png?raw=true\" alt=\"markdown\" title=\"match\"></p>\n<h3 id=\"5-1-先删除旧证书和pp文件\"><a href=\"#5-1-先删除旧证书和pp文件\" class=\"headerlink\" title=\"5.1 先删除旧证书和pp文件\"></a>5.1 先删除旧证书和pp文件</h3><p>分别执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fastlane match nuke development</span><br><span class=\"line\">$ fastlane match nuke distribution</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-2-生成证书和pp文件\"><a href=\"#5-2-生成证书和pp文件\" class=\"headerlink\" title=\"5.2 生成证书和pp文件\"></a>5.2 生成证书和pp文件</h3><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>分别执行以下命令（首次执行时,会要求输入Git仓库密码,用来对证书进行加密,后续其他机器获取证书时使用该密码进行解密）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fastlane match development</span><br><span class=\"line\">$ fastlane match adhoc</span><br><span class=\"line\">$ fastlane match appstore</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"6-打包ipa\"><a href=\"#6-打包ipa\" class=\"headerlink\" title=\"6. 打包ipa\"></a>6. 打包ipa</h2><p>打包命: <code>$ fastlane test</code>  test是Fastfile文件中的lane名称<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/ipa.png?raw=true\" alt=\"markdown\" title=\"ipa\"></p>\n<h2 id=\"7-问题\"><a href=\"#7-问题\" class=\"headerlink\" title=\"7. 问题\"></a>7. 问题</h2><h3 id=\"7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild\"><a href=\"#7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild\" class=\"headerlink\" title=\"7.1 Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.\"></a>7.1 <code>Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.</code></h3><p>Xcode 9 之后禁止其直接访问钥匙串, 导致持续集成时执行 xcode build 会出现找不到证书或证书配置文件。修改 fastlane 配置文件来解决<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/7.1问题.png?raw=true\" alt=\"markdown\" title=\"7.1问题\"><br><code>export_xcargs: &quot;-allowProvisioningUpdates&quot;</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Fastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。<a href=\"https://docs.fastlane.tools/\" title=\"Fastlane文档\" target=\"_blank\" rel=\"noopener\">Fastlane文档</a></p>\n<h2 id=\"1-安装Xcode命令行工具\"><a href=\"#1-安装Xcode命令行工具\" class=\"headerlink\" title=\"1. 安装Xcode命令行工具\"></a>1. 安装Xcode命令行工具</h2><p>安装命令: <code>$ xcode-select --install</code><br>提示: <code>xcode-select: error: command line tools are already installed, use &quot;Software Update&quot; to install updates</code>  表示已经安装</p>\n<h2 id=\"2-安装Fastlane\"><a href=\"#2-安装Fastlane\" class=\"headerlink\" title=\"2. 安装Fastlane\"></a>2. 安装Fastlane</h2><p>安装命令: <code>$ sudo gem install fastlane -NV</code> 或 <code>brew cask install fastlane</code><br>检查是否安装成功 <code>fastlane --version</code></p>\n<h2 id=\"3-初始化Fastlane\"><a href=\"#3-初始化Fastlane\" class=\"headerlink\" title=\"3. 初始化Fastlane\"></a>3. 初始化Fastlane</h2><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>初始化Fastlane：<code>$ fastlane init</code><br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png?raw=true\" alt=\"markdown\" title=\"Fastlane初始化\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 📸  Automate screenshots (自动化截图)</span><br><span class=\"line\">2. 👩‍✈️  Automate beta distribution to TestFlight (自动testfilght型配置)</span><br><span class=\"line\">3. 🚀  Automate App Store distribution (自动发布型配置)</span><br><span class=\"line\">4. 🛠  Manual setup - manually setup your project to automate your (需要手动配置内容)</span><br></pre></td></tr></table></figure></p>\n<p>我这里选择 4  等待一下会让你按回车 (共三次)  即安装成功！<br>在项目中会生成 fastlane文件夹、Gemfile、Gemfile.lock<br>fastlane文件夹：Appfile (存储有关开发者账号相关信息)、Fastfile (核心文件，主要用于 命令行调用和处理具体的流程)</p>\n<h2 id=\"4-文件配置\"><a href=\"#4-文件配置\" class=\"headerlink\" title=\"4. 文件配置\"></a>4. 文件配置</h2><h3 id=\"4-1-打开Appfile文件-修改以下配置\"><a href=\"#4-1-打开Appfile文件-修改以下配置\" class=\"headerlink\" title=\"4.1 打开Appfile文件 修改以下配置\"></a>4.1 打开Appfile文件 修改以下配置</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Appfile.png?raw=true\" alt=\"markdown\" title=\"Appfile\"></p>\n<h3 id=\"4-2-打开Fastfile文件-修改以下配置\"><a href=\"#4-2-打开Fastfile文件-修改以下配置\" class=\"headerlink\" title=\"4.2 打开Fastfile文件 修改以下配置\"></a>4.2 打开Fastfile文件 修改以下配置</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Fastfile.png?raw=true\" alt=\"markdown\" title=\"Fastfile\"></p>\n<h3 id=\"4-3-关于export-method方法\"><a href=\"#4-3-关于export-method方法\" class=\"headerlink\" title=\"4.3 关于export_method方法\"></a>4.3 关于export_method方法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store,   #AppStore正式生产环境包</span><br><span class=\"line\">ad-hoc,  #生产测试包</span><br><span class=\"line\">enterprise,  #企业包</span><br><span class=\"line\">development  #开发测试包</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-证书管理插件\"><a href=\"#5-证书管理插件\" class=\"headerlink\" title=\"5. 证书管理插件\"></a>5. 证书管理插件</h2><p>match是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中<br>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>安装命令: <code>$ fastlane match init</code><br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/match.png?raw=true\" alt=\"markdown\" title=\"match\"></p>\n<h3 id=\"5-1-先删除旧证书和pp文件\"><a href=\"#5-1-先删除旧证书和pp文件\" class=\"headerlink\" title=\"5.1 先删除旧证书和pp文件\"></a>5.1 先删除旧证书和pp文件</h3><p>分别执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fastlane match nuke development</span><br><span class=\"line\">$ fastlane match nuke distribution</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-2-生成证书和pp文件\"><a href=\"#5-2-生成证书和pp文件\" class=\"headerlink\" title=\"5.2 生成证书和pp文件\"></a>5.2 生成证书和pp文件</h3><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>分别执行以下命令（首次执行时,会要求输入Git仓库密码,用来对证书进行加密,后续其他机器获取证书时使用该密码进行解密）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fastlane match development</span><br><span class=\"line\">$ fastlane match adhoc</span><br><span class=\"line\">$ fastlane match appstore</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"6-打包ipa\"><a href=\"#6-打包ipa\" class=\"headerlink\" title=\"6. 打包ipa\"></a>6. 打包ipa</h2><p>打包命: <code>$ fastlane test</code>  test是Fastfile文件中的lane名称<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/ipa.png?raw=true\" alt=\"markdown\" title=\"ipa\"></p>\n<h2 id=\"7-问题\"><a href=\"#7-问题\" class=\"headerlink\" title=\"7. 问题\"></a>7. 问题</h2><h3 id=\"7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild\"><a href=\"#7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild\" class=\"headerlink\" title=\"7.1 Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.\"></a>7.1 <code>Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.</code></h3><p>Xcode 9 之后禁止其直接访问钥匙串, 导致持续集成时执行 xcode build 会出现找不到证书或证书配置文件。修改 fastlane 配置文件来解决<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/7.1问题.png?raw=true\" alt=\"markdown\" title=\"7.1问题\"><br><code>export_xcargs: &quot;-allowProvisioningUpdates&quot;</code></p>\n"},{"layout":"post","title":"mac OS 搭建Hexo个人博客","date":"2019-02-11T10:00:41.000Z","_content":"\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ \"Hexo文档\")\n\n## 1. 博客效果图\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/博客效果.png?raw=true \"博客效果\")\n\n## 2. 创建GitHub仓库\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/创建仓库.png?raw=true \"创建仓库\")\n\n** Respository name 中的lczalh.github.io 的lczalh 一定与前面的Owner 一致 **\n\n## 3. 安装Node.js\n[Node.js下载](https://nodejs.org/en/ \"Node.js下载\")\n验证是否安装: `$ node -v`\n\n## 4. 安装Git\n`$ brew install git`\n验证是否安装:  `$ git --version`\n\n## 5. 安装Hexo\n`$ sudo npm install hexo-cli -g`\n\n## 6. 创建博客\n`$ hexo init lczalh.github.io`                          `lczalh.github.io`为文件夹名称 可自定义\n执行成功后，会创建出一个名为 `lczalh.github.io` 的文件夹\n\n** 基础配置: 打开文件位置 `lczalh.github.io/_config.yml` **\n```\ntitle: lczalh    // 博客名称\nauthor: Liu Chao Zheng  // 你的名字\nlanguage: zh-Hans    // 中文\ntheme: new-vno   // 主题名称\ndeploy:\n  type: git    // Git发布\n  repo: https://github.com/lczalh/lczalh.github.io.git    // 刚才创建的Github仓库\n```\n\n## 7. 更改主题\n进入上一步创建的文件夹: `$ cd lczalh.github.io` \n安装主题: `$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno` \n\n[主题配置](https://github.com/monniya/hexo-theme-new-vno \"主题配置\")                     [更多主题](https://hexo.io/themes/ \"更多主题\")\n\n## 8. 写博客\n博客路径: `lczalh.github.io/source/_posts` 在这里创建你的第一篇博客 例如创建: ** 2019-2-12 hexo搭建.md **  内容如下:\n```\n---\nlayout: post\ntitle: \"mac OS 搭建Hexo个人博客\"\ndate: 2019-02-11 18:00:41\ntags: 博客\n---\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可\t利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ \"Hexo文档\")\n```\n## 9. 测试是否正常\n启动测试服务: `$ hexo s`  在浏览器中输入[https://localhost:4000](在浏览器中输入https://localhost:4000 访问) 访问\n\n## 10. 安装自动部署发布工具\n`$ sudo npm install hexo-deployer-git --save`\n\n## 11. 发布博客\n切换到root用户(有权限，跳过此行): `$ sudo -s`\n发布博客: `$ hexo clean && hexo g && hexo d`\n\n** 每次写完博客，执行下这两个命令就可以了 **\n\n## 12. 错误\n** 1.WARN No layout: index.html **\n解决方案: 安装/更新主题\n```\n$ cd lczalh.github.io\n$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2019-2-12 hexo搭建.md","raw":"---\nlayout: post\ntitle: \"mac OS 搭建Hexo个人博客\"\ndate: 2019-02-11 18:00:41\ntags: Hexo\n---\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ \"Hexo文档\")\n\n## 1. 博客效果图\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/博客效果.png?raw=true \"博客效果\")\n\n## 2. 创建GitHub仓库\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/创建仓库.png?raw=true \"创建仓库\")\n\n** Respository name 中的lczalh.github.io 的lczalh 一定与前面的Owner 一致 **\n\n## 3. 安装Node.js\n[Node.js下载](https://nodejs.org/en/ \"Node.js下载\")\n验证是否安装: `$ node -v`\n\n## 4. 安装Git\n`$ brew install git`\n验证是否安装:  `$ git --version`\n\n## 5. 安装Hexo\n`$ sudo npm install hexo-cli -g`\n\n## 6. 创建博客\n`$ hexo init lczalh.github.io`                          `lczalh.github.io`为文件夹名称 可自定义\n执行成功后，会创建出一个名为 `lczalh.github.io` 的文件夹\n\n** 基础配置: 打开文件位置 `lczalh.github.io/_config.yml` **\n```\ntitle: lczalh    // 博客名称\nauthor: Liu Chao Zheng  // 你的名字\nlanguage: zh-Hans    // 中文\ntheme: new-vno   // 主题名称\ndeploy:\n  type: git    // Git发布\n  repo: https://github.com/lczalh/lczalh.github.io.git    // 刚才创建的Github仓库\n```\n\n## 7. 更改主题\n进入上一步创建的文件夹: `$ cd lczalh.github.io` \n安装主题: `$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno` \n\n[主题配置](https://github.com/monniya/hexo-theme-new-vno \"主题配置\")                     [更多主题](https://hexo.io/themes/ \"更多主题\")\n\n## 8. 写博客\n博客路径: `lczalh.github.io/source/_posts` 在这里创建你的第一篇博客 例如创建: ** 2019-2-12 hexo搭建.md **  内容如下:\n```\n---\nlayout: post\ntitle: \"mac OS 搭建Hexo个人博客\"\ndate: 2019-02-11 18:00:41\ntags: 博客\n---\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可\t利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ \"Hexo文档\")\n```\n## 9. 测试是否正常\n启动测试服务: `$ hexo s`  在浏览器中输入[https://localhost:4000](在浏览器中输入https://localhost:4000 访问) 访问\n\n## 10. 安装自动部署发布工具\n`$ sudo npm install hexo-deployer-git --save`\n\n## 11. 发布博客\n切换到root用户(有权限，跳过此行): `$ sudo -s`\n发布博客: `$ hexo clean && hexo g && hexo d`\n\n** 每次写完博客，执行下这两个命令就可以了 **\n\n## 12. 错误\n** 1.WARN No layout: index.html **\n解决方案: 安装/更新主题\n```\n$ cd lczalh.github.io\n$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2019-2-12 hexo搭建","published":1,"updated":"2019-04-22T08:26:04.328Z","comments":1,"photos":[],"link":"","_id":"cjus3pzh50001ss7d0zjua9ya","content":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href=\"https://hexo.io/zh-cn/docs/\" title=\"Hexo文档\" target=\"_blank\" rel=\"noopener\">Hexo文档</a></p>\n<h2 id=\"1-博客效果图\"><a href=\"#1-博客效果图\" class=\"headerlink\" title=\"1. 博客效果图\"></a>1. 博客效果图</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/博客效果.png?raw=true\" alt=\"markdown\" title=\"博客效果\"></p>\n<h2 id=\"2-创建GitHub仓库\"><a href=\"#2-创建GitHub仓库\" class=\"headerlink\" title=\"2. 创建GitHub仓库\"></a>2. 创建GitHub仓库</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/创建仓库.png?raw=true\" alt=\"markdown\" title=\"创建仓库\"></p>\n<p><strong> Respository name 中的lczalh.github.io 的lczalh 一定与前面的Owner 一致 </strong></p>\n<h2 id=\"3-安装Node-js\"><a href=\"#3-安装Node-js\" class=\"headerlink\" title=\"3. 安装Node.js\"></a>3. 安装Node.js</h2><p><a href=\"https://nodejs.org/en/\" title=\"Node.js下载\" target=\"_blank\" rel=\"noopener\">Node.js下载</a><br>验证是否安装: <code>$ node -v</code></p>\n<h2 id=\"4-安装Git\"><a href=\"#4-安装Git\" class=\"headerlink\" title=\"4. 安装Git\"></a>4. 安装Git</h2><p><code>$ brew install git</code><br>验证是否安装:  <code>$ git --version</code></p>\n<h2 id=\"5-安装Hexo\"><a href=\"#5-安装Hexo\" class=\"headerlink\" title=\"5. 安装Hexo\"></a>5. 安装Hexo</h2><p><code>$ sudo npm install hexo-cli -g</code></p>\n<h2 id=\"6-创建博客\"><a href=\"#6-创建博客\" class=\"headerlink\" title=\"6. 创建博客\"></a>6. 创建博客</h2><p><code>$ hexo init lczalh.github.io</code>                          <code>lczalh.github.io</code>为文件夹名称 可自定义<br>执行成功后，会创建出一个名为 <code>lczalh.github.io</code> 的文件夹</p>\n<p><strong> 基础配置: 打开文件位置 <code>lczalh.github.io/_config.yml</code> </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: lczalh    // 博客名称</span><br><span class=\"line\">author: Liu Chao Zheng  // 你的名字</span><br><span class=\"line\">language: zh-Hans    // 中文</span><br><span class=\"line\">theme: new-vno   // 主题名称</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git    // Git发布</span><br><span class=\"line\">  repo: https://github.com/lczalh/lczalh.github.io.git    // 刚才创建的Github仓库</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7-更改主题\"><a href=\"#7-更改主题\" class=\"headerlink\" title=\"7. 更改主题\"></a>7. 更改主题</h2><p>进入上一步创建的文件夹: <code>$ cd lczalh.github.io</code><br>安装主题: <code>$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno</code> </p>\n<p><a href=\"https://github.com/monniya/hexo-theme-new-vno\" title=\"主题配置\" target=\"_blank\" rel=\"noopener\">主题配置</a>                     <a href=\"https://hexo.io/themes/\" title=\"更多主题\" target=\"_blank\" rel=\"noopener\">更多主题</a></p>\n<h2 id=\"8-写博客\"><a href=\"#8-写博客\" class=\"headerlink\" title=\"8. 写博客\"></a>8. 写博客</h2><p>博客路径: <code>lczalh.github.io/source/_posts</code> 在这里创建你的第一篇博客 例如创建: <strong> 2019-2-12 hexo搭建.md </strong>  内容如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: post</span><br><span class=\"line\">title: &quot;mac OS 搭建Hexo个人博客&quot;</span><br><span class=\"line\">date: 2019-02-11 18:00:41</span><br><span class=\"line\">tags: 博客</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可\t利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ &quot;Hexo文档&quot;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"9-测试是否正常\"><a href=\"#9-测试是否正常\" class=\"headerlink\" title=\"9. 测试是否正常\"></a>9. 测试是否正常</h2><p>启动测试服务: <code>$ hexo s</code>  在浏览器中输入<a href=\"在浏览器中输入https://localhost:4000 访问\">https://localhost:4000</a> 访问</p>\n<h2 id=\"10-安装自动部署发布工具\"><a href=\"#10-安装自动部署发布工具\" class=\"headerlink\" title=\"10. 安装自动部署发布工具\"></a>10. 安装自动部署发布工具</h2><p><code>$ sudo npm install hexo-deployer-git --save</code></p>\n<h2 id=\"11-发布博客\"><a href=\"#11-发布博客\" class=\"headerlink\" title=\"11. 发布博客\"></a>11. 发布博客</h2><p>切换到root用户(有权限，跳过此行): <code>$ sudo -s</code><br>发布博客: <code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p>\n<p><strong> 每次写完博客，执行下这两个命令就可以了 </strong></p>\n<h2 id=\"12-错误\"><a href=\"#12-错误\" class=\"headerlink\" title=\"12. 错误\"></a>12. 错误</h2><p><strong> 1.WARN No layout: index.html </strong><br>解决方案: 安装/更新主题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd lczalh.github.io</span><br><span class=\"line\">$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href=\"https://hexo.io/zh-cn/docs/\" title=\"Hexo文档\" target=\"_blank\" rel=\"noopener\">Hexo文档</a></p>\n<h2 id=\"1-博客效果图\"><a href=\"#1-博客效果图\" class=\"headerlink\" title=\"1. 博客效果图\"></a>1. 博客效果图</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/博客效果.png?raw=true\" alt=\"markdown\" title=\"博客效果\"></p>\n<h2 id=\"2-创建GitHub仓库\"><a href=\"#2-创建GitHub仓库\" class=\"headerlink\" title=\"2. 创建GitHub仓库\"></a>2. 创建GitHub仓库</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/创建仓库.png?raw=true\" alt=\"markdown\" title=\"创建仓库\"></p>\n<p><strong> Respository name 中的lczalh.github.io 的lczalh 一定与前面的Owner 一致 </strong></p>\n<h2 id=\"3-安装Node-js\"><a href=\"#3-安装Node-js\" class=\"headerlink\" title=\"3. 安装Node.js\"></a>3. 安装Node.js</h2><p><a href=\"https://nodejs.org/en/\" title=\"Node.js下载\" target=\"_blank\" rel=\"noopener\">Node.js下载</a><br>验证是否安装: <code>$ node -v</code></p>\n<h2 id=\"4-安装Git\"><a href=\"#4-安装Git\" class=\"headerlink\" title=\"4. 安装Git\"></a>4. 安装Git</h2><p><code>$ brew install git</code><br>验证是否安装:  <code>$ git --version</code></p>\n<h2 id=\"5-安装Hexo\"><a href=\"#5-安装Hexo\" class=\"headerlink\" title=\"5. 安装Hexo\"></a>5. 安装Hexo</h2><p><code>$ sudo npm install hexo-cli -g</code></p>\n<h2 id=\"6-创建博客\"><a href=\"#6-创建博客\" class=\"headerlink\" title=\"6. 创建博客\"></a>6. 创建博客</h2><p><code>$ hexo init lczalh.github.io</code>                          <code>lczalh.github.io</code>为文件夹名称 可自定义<br>执行成功后，会创建出一个名为 <code>lczalh.github.io</code> 的文件夹</p>\n<p><strong> 基础配置: 打开文件位置 <code>lczalh.github.io/_config.yml</code> </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: lczalh    // 博客名称</span><br><span class=\"line\">author: Liu Chao Zheng  // 你的名字</span><br><span class=\"line\">language: zh-Hans    // 中文</span><br><span class=\"line\">theme: new-vno   // 主题名称</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git    // Git发布</span><br><span class=\"line\">  repo: https://github.com/lczalh/lczalh.github.io.git    // 刚才创建的Github仓库</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7-更改主题\"><a href=\"#7-更改主题\" class=\"headerlink\" title=\"7. 更改主题\"></a>7. 更改主题</h2><p>进入上一步创建的文件夹: <code>$ cd lczalh.github.io</code><br>安装主题: <code>$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno</code> </p>\n<p><a href=\"https://github.com/monniya/hexo-theme-new-vno\" title=\"主题配置\" target=\"_blank\" rel=\"noopener\">主题配置</a>                     <a href=\"https://hexo.io/themes/\" title=\"更多主题\" target=\"_blank\" rel=\"noopener\">更多主题</a></p>\n<h2 id=\"8-写博客\"><a href=\"#8-写博客\" class=\"headerlink\" title=\"8. 写博客\"></a>8. 写博客</h2><p>博客路径: <code>lczalh.github.io/source/_posts</code> 在这里创建你的第一篇博客 例如创建: <strong> 2019-2-12 hexo搭建.md </strong>  内容如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: post</span><br><span class=\"line\">title: &quot;mac OS 搭建Hexo个人博客&quot;</span><br><span class=\"line\">date: 2019-02-11 18:00:41</span><br><span class=\"line\">tags: 博客</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可\t利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/ &quot;Hexo文档&quot;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"9-测试是否正常\"><a href=\"#9-测试是否正常\" class=\"headerlink\" title=\"9. 测试是否正常\"></a>9. 测试是否正常</h2><p>启动测试服务: <code>$ hexo s</code>  在浏览器中输入<a href=\"在浏览器中输入https://localhost:4000 访问\">https://localhost:4000</a> 访问</p>\n<h2 id=\"10-安装自动部署发布工具\"><a href=\"#10-安装自动部署发布工具\" class=\"headerlink\" title=\"10. 安装自动部署发布工具\"></a>10. 安装自动部署发布工具</h2><p><code>$ sudo npm install hexo-deployer-git --save</code></p>\n<h2 id=\"11-发布博客\"><a href=\"#11-发布博客\" class=\"headerlink\" title=\"11. 发布博客\"></a>11. 发布博客</h2><p>切换到root用户(有权限，跳过此行): <code>$ sudo -s</code><br>发布博客: <code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p>\n<p><strong> 每次写完博客，执行下这两个命令就可以了 </strong></p>\n<h2 id=\"12-错误\"><a href=\"#12-错误\" class=\"headerlink\" title=\"12. 错误\"></a>12. 错误</h2><p><strong> 1.WARN No layout: index.html </strong><br>解决方案: 安装/更新主题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd lczalh.github.io</span><br><span class=\"line\">$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"iOS XcodeBuild打包ipa","date":"2019-03-04T02:07:13.000Z","_content":"\nXcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作\n\n## 1. 进入项目的目录\n`$ cd /Users/tanitsubukousha/Desktop/GLGL`   /Users/tanitsubukousha/Desktop/GLGL: 为你的项目路径\n\n## 2. 清除编译过程生成的文件\n`$ xcodebuild clean -$workspace $project_Name.$projectType -scheme $project_Name -configuration $configuration`\n```\n$workspace:  project / workspace（CocoaPods）\n$project_Name: 项目名称\n$projectType:  xcodeproj / xcworkspace（CocoaPods）\n$configuration:  Debug / Release\n```\n出现` ** CLEAN SUCCEEDED **` 则清除成功\n\n## 3. 生成 .xcarchive 文件\n`$ xcodebuild archive -$workspace $project_Name.$projectType -scheme $project_Name -archivePath ./$project_Name.xcarchive`\n执行完后目录下会生成 `$project_Name.xcarchive` 文件。\n\n## 4. 配置plist文件\n在当前目录下创建一个`app-store.plist`    appstore: 自定义名称\n内容如下\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/app-store.png?raw=true \"app-store\")\n4.1关于method内容\n```\napp-store,   #AppStore正式生产环境包\nad-hoc,  #生产测试包\nenterprise,  #企业包\ndevelopment  #开发测试包\n```\n\n## 5. 打包ipa\n`$ xcodebuild -exportArchive -exportOptionsPlist app-store.plist -archivePath ./$project_Name.xcarchive -exportPath ./autoPackage -allowProvisioningUpdates`\n```\napp-store.plist 创建的pislt文件\n./autoPackage  ipa存放的路径\n```\n打包成功 会在当前目录生成一个`autoPackage`文件夹 \n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/ipa.png?raw=true \"ipa\")\n\n## 6. 打包脚本\n[XcodeprojShell](https://github.com/lczalh/XcodeprojShell \"XcodeprojShell\") \n\n使用方法：\n### 6.1 将以下文件放入项目目录\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/脚本.png?raw=true \"脚本\")\n### 6.2 进入项目的目录\n`$ cd 你的项目路径`\n### 6.3 运行脚本\n`$ ./XcodeprojShell.sh` 根据提示操作即可\n\n## 7. 远程打包（ 必须每次先获取`keychain`的访问权限）\n`$ security unlock-keychain -p $password /Users/$userName/Library/Keychains/Login.keychain`\n```\n$userName 主机用户名\n$password 主机密码\n```\n\n## 8. 对应用重签名\n### 8.1 将得到的ceshi.ipa 进行解压  `$ unzip ceshi.ipa`\n### 8.2 删除旧签名 `$ rm -rf Payload/ceshi.app/_CodeSignature/`\n### 8.3 将 `$ codesign -d --entitlements - Payload/XXX.app` 命令打印的内容,创建entitlements.plist文件\n### 8.4 签名 `codesign -f -s \"iPhone Distribution: XXX\" --entitlements entitlements.plist Payload/ceshi.app`\n\n","source":"_posts/2019-3-04 XcodeBuild打包ipa.md","raw":"---\nlayout: post\ntitle: \"iOS XcodeBuild打包ipa\"\ndate: 2019-03-04 10:07:13\ntags: iOS\n---\n\nXcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作\n\n## 1. 进入项目的目录\n`$ cd /Users/tanitsubukousha/Desktop/GLGL`   /Users/tanitsubukousha/Desktop/GLGL: 为你的项目路径\n\n## 2. 清除编译过程生成的文件\n`$ xcodebuild clean -$workspace $project_Name.$projectType -scheme $project_Name -configuration $configuration`\n```\n$workspace:  project / workspace（CocoaPods）\n$project_Name: 项目名称\n$projectType:  xcodeproj / xcworkspace（CocoaPods）\n$configuration:  Debug / Release\n```\n出现` ** CLEAN SUCCEEDED **` 则清除成功\n\n## 3. 生成 .xcarchive 文件\n`$ xcodebuild archive -$workspace $project_Name.$projectType -scheme $project_Name -archivePath ./$project_Name.xcarchive`\n执行完后目录下会生成 `$project_Name.xcarchive` 文件。\n\n## 4. 配置plist文件\n在当前目录下创建一个`app-store.plist`    appstore: 自定义名称\n内容如下\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/app-store.png?raw=true \"app-store\")\n4.1关于method内容\n```\napp-store,   #AppStore正式生产环境包\nad-hoc,  #生产测试包\nenterprise,  #企业包\ndevelopment  #开发测试包\n```\n\n## 5. 打包ipa\n`$ xcodebuild -exportArchive -exportOptionsPlist app-store.plist -archivePath ./$project_Name.xcarchive -exportPath ./autoPackage -allowProvisioningUpdates`\n```\napp-store.plist 创建的pislt文件\n./autoPackage  ipa存放的路径\n```\n打包成功 会在当前目录生成一个`autoPackage`文件夹 \n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/ipa.png?raw=true \"ipa\")\n\n## 6. 打包脚本\n[XcodeprojShell](https://github.com/lczalh/XcodeprojShell \"XcodeprojShell\") \n\n使用方法：\n### 6.1 将以下文件放入项目目录\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/脚本.png?raw=true \"脚本\")\n### 6.2 进入项目的目录\n`$ cd 你的项目路径`\n### 6.3 运行脚本\n`$ ./XcodeprojShell.sh` 根据提示操作即可\n\n## 7. 远程打包（ 必须每次先获取`keychain`的访问权限）\n`$ security unlock-keychain -p $password /Users/$userName/Library/Keychains/Login.keychain`\n```\n$userName 主机用户名\n$password 主机密码\n```\n\n## 8. 对应用重签名\n### 8.1 将得到的ceshi.ipa 进行解压  `$ unzip ceshi.ipa`\n### 8.2 删除旧签名 `$ rm -rf Payload/ceshi.app/_CodeSignature/`\n### 8.3 将 `$ codesign -d --entitlements - Payload/XXX.app` 命令打印的内容,创建entitlements.plist文件\n### 8.4 签名 `codesign -f -s \"iPhone Distribution: XXX\" --entitlements entitlements.plist Payload/ceshi.app`\n\n","slug":"2019-3-04 XcodeBuild打包ipa","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzhc0003ss7dknbw8r6f","content":"<p>XcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作</p>\n<h2 id=\"1-进入项目的目录\"><a href=\"#1-进入项目的目录\" class=\"headerlink\" title=\"1. 进入项目的目录\"></a>1. 进入项目的目录</h2><p><code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code>   /Users/tanitsubukousha/Desktop/GLGL: 为你的项目路径</p>\n<h2 id=\"2-清除编译过程生成的文件\"><a href=\"#2-清除编译过程生成的文件\" class=\"headerlink\" title=\"2. 清除编译过程生成的文件\"></a>2. 清除编译过程生成的文件</h2><p><code>$ xcodebuild clean -$workspace $project_Name.$projectType -scheme $project_Name -configuration $configuration</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$workspace:  project / workspace（CocoaPods）</span><br><span class=\"line\">$project_Name: 项目名称</span><br><span class=\"line\">$projectType:  xcodeproj / xcworkspace（CocoaPods）</span><br><span class=\"line\">$configuration:  Debug / Release</span><br></pre></td></tr></table></figure></p>\n<p>出现<code>** CLEAN SUCCEEDED **</code> 则清除成功</p>\n<h2 id=\"3-生成-xcarchive-文件\"><a href=\"#3-生成-xcarchive-文件\" class=\"headerlink\" title=\"3. 生成 .xcarchive 文件\"></a>3. 生成 .xcarchive 文件</h2><p><code>$ xcodebuild archive -$workspace $project_Name.$projectType -scheme $project_Name -archivePath ./$project_Name.xcarchive</code><br>执行完后目录下会生成 <code>$project_Name.xcarchive</code> 文件。</p>\n<h2 id=\"4-配置plist文件\"><a href=\"#4-配置plist文件\" class=\"headerlink\" title=\"4. 配置plist文件\"></a>4. 配置plist文件</h2><p>在当前目录下创建一个<code>app-store.plist</code>    appstore: 自定义名称<br>内容如下<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/app-store.png?raw=true\" alt=\"markdown\" title=\"app-store\"><br>4.1关于method内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store,   #AppStore正式生产环境包</span><br><span class=\"line\">ad-hoc,  #生产测试包</span><br><span class=\"line\">enterprise,  #企业包</span><br><span class=\"line\">development  #开发测试包</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"5-打包ipa\"><a href=\"#5-打包ipa\" class=\"headerlink\" title=\"5. 打包ipa\"></a>5. 打包ipa</h2><p><code>$ xcodebuild -exportArchive -exportOptionsPlist app-store.plist -archivePath ./$project_Name.xcarchive -exportPath ./autoPackage -allowProvisioningUpdates</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store.plist 创建的pislt文件</span><br><span class=\"line\">./autoPackage  ipa存放的路径</span><br></pre></td></tr></table></figure></p>\n<p>打包成功 会在当前目录生成一个<code>autoPackage</code>文件夹<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/ipa.png?raw=true\" alt=\"markdown\" title=\"ipa\"></p>\n<h2 id=\"6-打包脚本\"><a href=\"#6-打包脚本\" class=\"headerlink\" title=\"6. 打包脚本\"></a>6. 打包脚本</h2><p><a href=\"https://github.com/lczalh/XcodeprojShell\" title=\"XcodeprojShell\" target=\"_blank\" rel=\"noopener\">XcodeprojShell</a> </p>\n<p>使用方法：</p>\n<h3 id=\"6-1-将以下文件放入项目目录\"><a href=\"#6-1-将以下文件放入项目目录\" class=\"headerlink\" title=\"6.1 将以下文件放入项目目录\"></a>6.1 将以下文件放入项目目录</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/脚本.png?raw=true\" alt=\"markdown\" title=\"脚本\"></p>\n<h3 id=\"6-2-进入项目的目录\"><a href=\"#6-2-进入项目的目录\" class=\"headerlink\" title=\"6.2 进入项目的目录\"></a>6.2 进入项目的目录</h3><p><code>$ cd 你的项目路径</code></p>\n<h3 id=\"6-3-运行脚本\"><a href=\"#6-3-运行脚本\" class=\"headerlink\" title=\"6.3 运行脚本\"></a>6.3 运行脚本</h3><p><code>$ ./XcodeprojShell.sh</code> 根据提示操作即可</p>\n<h2 id=\"7-远程打包（-必须每次先获取keychain的访问权限）\"><a href=\"#7-远程打包（-必须每次先获取keychain的访问权限）\" class=\"headerlink\" title=\"7. 远程打包（ 必须每次先获取keychain的访问权限）\"></a>7. 远程打包（ 必须每次先获取<code>keychain</code>的访问权限）</h2><p><code>$ security unlock-keychain -p $password /Users/$userName/Library/Keychains/Login.keychain</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$userName 主机用户名</span><br><span class=\"line\">$password 主机密码</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-对应用重签名\"><a href=\"#8-对应用重签名\" class=\"headerlink\" title=\"8. 对应用重签名\"></a>8. 对应用重签名</h2><h3 id=\"8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa\"><a href=\"#8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa\" class=\"headerlink\" title=\"8.1 将得到的ceshi.ipa 进行解压  $ unzip ceshi.ipa\"></a>8.1 将得到的ceshi.ipa 进行解压  <code>$ unzip ceshi.ipa</code></h3><h3 id=\"8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature\"><a href=\"#8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature\" class=\"headerlink\" title=\"8.2 删除旧签名 $ rm -rf Payload/ceshi.app/_CodeSignature/\"></a>8.2 删除旧签名 <code>$ rm -rf Payload/ceshi.app/_CodeSignature/</code></h3><h3 id=\"8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件\"><a href=\"#8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件\" class=\"headerlink\" title=\"8.3 将 $ codesign -d --entitlements - Payload/XXX.app 命令打印的内容,创建entitlements.plist文件\"></a>8.3 将 <code>$ codesign -d --entitlements - Payload/XXX.app</code> 命令打印的内容,创建entitlements.plist文件</h3><h3 id=\"8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app\"><a href=\"#8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app\" class=\"headerlink\" title=\"8.4 签名 codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app\"></a>8.4 签名 <code>codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app</code></h3>","site":{"data":{}},"excerpt":"","more":"<p>XcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作</p>\n<h2 id=\"1-进入项目的目录\"><a href=\"#1-进入项目的目录\" class=\"headerlink\" title=\"1. 进入项目的目录\"></a>1. 进入项目的目录</h2><p><code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code>   /Users/tanitsubukousha/Desktop/GLGL: 为你的项目路径</p>\n<h2 id=\"2-清除编译过程生成的文件\"><a href=\"#2-清除编译过程生成的文件\" class=\"headerlink\" title=\"2. 清除编译过程生成的文件\"></a>2. 清除编译过程生成的文件</h2><p><code>$ xcodebuild clean -$workspace $project_Name.$projectType -scheme $project_Name -configuration $configuration</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$workspace:  project / workspace（CocoaPods）</span><br><span class=\"line\">$project_Name: 项目名称</span><br><span class=\"line\">$projectType:  xcodeproj / xcworkspace（CocoaPods）</span><br><span class=\"line\">$configuration:  Debug / Release</span><br></pre></td></tr></table></figure></p>\n<p>出现<code>** CLEAN SUCCEEDED **</code> 则清除成功</p>\n<h2 id=\"3-生成-xcarchive-文件\"><a href=\"#3-生成-xcarchive-文件\" class=\"headerlink\" title=\"3. 生成 .xcarchive 文件\"></a>3. 生成 .xcarchive 文件</h2><p><code>$ xcodebuild archive -$workspace $project_Name.$projectType -scheme $project_Name -archivePath ./$project_Name.xcarchive</code><br>执行完后目录下会生成 <code>$project_Name.xcarchive</code> 文件。</p>\n<h2 id=\"4-配置plist文件\"><a href=\"#4-配置plist文件\" class=\"headerlink\" title=\"4. 配置plist文件\"></a>4. 配置plist文件</h2><p>在当前目录下创建一个<code>app-store.plist</code>    appstore: 自定义名称<br>内容如下<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/app-store.png?raw=true\" alt=\"markdown\" title=\"app-store\"><br>4.1关于method内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store,   #AppStore正式生产环境包</span><br><span class=\"line\">ad-hoc,  #生产测试包</span><br><span class=\"line\">enterprise,  #企业包</span><br><span class=\"line\">development  #开发测试包</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"5-打包ipa\"><a href=\"#5-打包ipa\" class=\"headerlink\" title=\"5. 打包ipa\"></a>5. 打包ipa</h2><p><code>$ xcodebuild -exportArchive -exportOptionsPlist app-store.plist -archivePath ./$project_Name.xcarchive -exportPath ./autoPackage -allowProvisioningUpdates</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app-store.plist 创建的pislt文件</span><br><span class=\"line\">./autoPackage  ipa存放的路径</span><br></pre></td></tr></table></figure></p>\n<p>打包成功 会在当前目录生成一个<code>autoPackage</code>文件夹<br><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/ipa.png?raw=true\" alt=\"markdown\" title=\"ipa\"></p>\n<h2 id=\"6-打包脚本\"><a href=\"#6-打包脚本\" class=\"headerlink\" title=\"6. 打包脚本\"></a>6. 打包脚本</h2><p><a href=\"https://github.com/lczalh/XcodeprojShell\" title=\"XcodeprojShell\" target=\"_blank\" rel=\"noopener\">XcodeprojShell</a> </p>\n<p>使用方法：</p>\n<h3 id=\"6-1-将以下文件放入项目目录\"><a href=\"#6-1-将以下文件放入项目目录\" class=\"headerlink\" title=\"6.1 将以下文件放入项目目录\"></a>6.1 将以下文件放入项目目录</h3><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/脚本.png?raw=true\" alt=\"markdown\" title=\"脚本\"></p>\n<h3 id=\"6-2-进入项目的目录\"><a href=\"#6-2-进入项目的目录\" class=\"headerlink\" title=\"6.2 进入项目的目录\"></a>6.2 进入项目的目录</h3><p><code>$ cd 你的项目路径</code></p>\n<h3 id=\"6-3-运行脚本\"><a href=\"#6-3-运行脚本\" class=\"headerlink\" title=\"6.3 运行脚本\"></a>6.3 运行脚本</h3><p><code>$ ./XcodeprojShell.sh</code> 根据提示操作即可</p>\n<h2 id=\"7-远程打包（-必须每次先获取keychain的访问权限）\"><a href=\"#7-远程打包（-必须每次先获取keychain的访问权限）\" class=\"headerlink\" title=\"7. 远程打包（ 必须每次先获取keychain的访问权限）\"></a>7. 远程打包（ 必须每次先获取<code>keychain</code>的访问权限）</h2><p><code>$ security unlock-keychain -p $password /Users/$userName/Library/Keychains/Login.keychain</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$userName 主机用户名</span><br><span class=\"line\">$password 主机密码</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-对应用重签名\"><a href=\"#8-对应用重签名\" class=\"headerlink\" title=\"8. 对应用重签名\"></a>8. 对应用重签名</h2><h3 id=\"8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa\"><a href=\"#8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa\" class=\"headerlink\" title=\"8.1 将得到的ceshi.ipa 进行解压  $ unzip ceshi.ipa\"></a>8.1 将得到的ceshi.ipa 进行解压  <code>$ unzip ceshi.ipa</code></h3><h3 id=\"8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature\"><a href=\"#8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature\" class=\"headerlink\" title=\"8.2 删除旧签名 $ rm -rf Payload/ceshi.app/_CodeSignature/\"></a>8.2 删除旧签名 <code>$ rm -rf Payload/ceshi.app/_CodeSignature/</code></h3><h3 id=\"8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件\"><a href=\"#8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件\" class=\"headerlink\" title=\"8.3 将 $ codesign -d --entitlements - Payload/XXX.app 命令打印的内容,创建entitlements.plist文件\"></a>8.3 将 <code>$ codesign -d --entitlements - Payload/XXX.app</code> 命令打印的内容,创建entitlements.plist文件</h3><h3 id=\"8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app\"><a href=\"#8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app\" class=\"headerlink\" title=\"8.4 签名 codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app\"></a>8.4 签名 <code>codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app</code></h3>"},{"layout":"post","title":"iOS 记录","date":"2019-03-07T06:43:45.000Z","_content":"\n记录点常用方法、属性以及遇到的问题\n\n## 1. GCD信号量\n```\n//创建信号量\ndispatch_semaphore_t semaphore = dispatch_semaphore_create(1);\ndispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\ndispatch_async(queue, ^{\n    // 等待信号量\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n    // 发起网络请求\n    [BadgeCountModel HomeBadgeCountBlock:^(NSDictionary *data) {\n        NSNumber *num = data[@\"num\"];\n        if (num.integerValue > 0 ) {\n            weakSelf.rightBt.isShowBadge = YES;\n        } else {\n            weakSelf.rightBt.isShowBadge = NO;\n        }\n        // 发送信号量\n        dispatch_semaphore_signal(semaphore);\n    } andError:^(NSError *error) {\n        dispatch_semaphore_signal(semaphore);\n    }]; \n});\n\ndispatch_async(queue, ^{\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n    // 发起网络请求\n    [BadgeCountModel HomeDetailBadgeCountBlock:^(NSArray *data) {\n        if (!weakSelf.badgeDict) {\n            weakSelf.badgeDict = [NSMutableDictionary dictionary];\n        }\n        [weakSelf.badgeDict removeAllObjects];\n        NSMutableArray *badgeArray = [NSMutableArray array];\n        for (NSDictionary *dict in data) {\n            BadgeCountModel *model = [[BadgeCountModel alloc] init];\n            model.code = [NSString stringWithFormat:@\"%@\",dict[@\"key\"]];\n            model.value = [NSString stringWithFormat:@\"%@\",dict[@\"value\"]];\n            [badgeArray addObject:model];\n            NSIndexPath *path = [self getIndexPathWithCode:model.code];\n            if (!path) {\n                continue;\n            }\n            [weakSelf.badgeDict setObject:model.value forKey:path];\n        }\n        [weakSelf.collectionView reloadData];\n        [[GLMenuManager shareInstance] setRedPointArray:badgeArray];\n        dispatch_semaphore_signal(semaphore);\n    } andError:^(NSError *error) {\n        dispatch_semaphore_signal(semaphore);\n    }];\n});\n```\n\n## 2. 隐藏UITabBarController上的按钮\n```\n// 方法\n- (void)hideContentController:(UIViewController*)content{\n    [content willMoveToParentViewController:nil];// 1\n    [content.view removeFromSuperview];// 2\n    [content removeFromParentViewController];// 3\n}\n\n// 调用\n[self hideContentController:self.tabBarController.viewControllers[0]];\n```\n\n## 3. 在子视图中获取父控制器、父视图\n#### Objective-C\n```\n/**\n获取父控制器\n\n@param view 当前视图\n@param className 需要获取的控制器名称\n@return 返回控制器对象\n*/\n- (UIViewController *)LCZGetSuperViewController:(UIView *)currentview superViewControllerClassName:(NSString *)className\n{\n    for (UIView* next = [current superview]; next; next = next.superview) {\n    UIResponder *nextResponder = [next nextResponder];\n        if ([nextResponder isKindOfClass:[NSClassFromString(className) class]]) {\n            return (UIViewController *)nextResponder;\n        }\n    }\n    return nil;\n}\n\n/**\n获取当前视图中的目标父视图\n\n@param currentView 当前视图\n@param superView 父视图\n@return 父视图对象\n*/\n- (UIView *)LCZGetSuperView:(UIView *)currentView superView:(UIView *)superView {\n    UIView *view = currentView.superview;\n    while (![view isKindOfClass:[superView class]]) {\n        if (view.superview == nil) {\n            return nil;\n        } else {\n        view = [view superview];\n        }\n    }\n    return view;\n}\n```\n\n#### Swift\n```\n/// 通过当前视图获取父视图的控制器\n///\n/// - Parameters:\n///   - currentView: 当前视图\n///   - viewController: 需要获取到的控制器\n/// - Returns: 返回控制器\nfunc LCZGetSuperViewController<T: UIViewController>(currentView:UIView, viewController: T.Type) -> T? {\n    var view: UIView = currentView.superview!\n    while view.next!.isKind(of: T.self) != true {\n        guard view.superview != nil else {\n            return nil\n        }\n        view = view.superview!\n    }\n    return view.next as? T\n}\n\n/// 获取当前视图中的目标父视图\n///\n/// - Parameters:\n///   - currentView: 当前视图\n///   - superView: 目标父视图\n/// - Returns: 返回父视图\npublic func LCZGetSuperView<T: UIView>(currentView: UIView, superView: T.Type) -> T? {\n    var view: UIView = currentView.superview!\n    while view.isKind(of: T.self) != true {\n        guard view.superview != nil else {\n            return nil\n        }\n        view = view.superview!\n        }\n    return view as? T\n}\n```\n\n## 4. Masonry优先完全显示内容、抵抗压缩\n```\n// 优先完全显示内容\n[self.titleLabel setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\n// 抵抗压缩\n[self.titleLabel setContentCompressionResistancePriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\n```\n\n## 5. SnapKit优先完全显示内容、抵抗压缩\n```\nself.title.setContentHuggingPriority(.required, for: .horizontal)\nself.title.setContentCompressionResistancePriority(.required, for: .horizontal)\n```\n\n## 6. UITableView自适应高度\n```\nself.homeTableView.estimatedRowHeight = 44\nself.homeTableView.rowHeight = UITableViewAutomaticDimension;\n```\n\n## 7. GCD单例\n```\n+ (instancetype)shared {\n    static Share *shared = nil;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        shared = [[Share alloc]init];\n    });\n    return shared;\n}\n```\n\n\n","source":"_posts/2019-3-07 iOS开发记录.md","raw":"---\nlayout: post\ntitle: \"iOS 记录\"\ndate: 2019-03-07 14:43:45\ntags: iOS\n---\n\n记录点常用方法、属性以及遇到的问题\n\n## 1. GCD信号量\n```\n//创建信号量\ndispatch_semaphore_t semaphore = dispatch_semaphore_create(1);\ndispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\ndispatch_async(queue, ^{\n    // 等待信号量\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n    // 发起网络请求\n    [BadgeCountModel HomeBadgeCountBlock:^(NSDictionary *data) {\n        NSNumber *num = data[@\"num\"];\n        if (num.integerValue > 0 ) {\n            weakSelf.rightBt.isShowBadge = YES;\n        } else {\n            weakSelf.rightBt.isShowBadge = NO;\n        }\n        // 发送信号量\n        dispatch_semaphore_signal(semaphore);\n    } andError:^(NSError *error) {\n        dispatch_semaphore_signal(semaphore);\n    }]; \n});\n\ndispatch_async(queue, ^{\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n    // 发起网络请求\n    [BadgeCountModel HomeDetailBadgeCountBlock:^(NSArray *data) {\n        if (!weakSelf.badgeDict) {\n            weakSelf.badgeDict = [NSMutableDictionary dictionary];\n        }\n        [weakSelf.badgeDict removeAllObjects];\n        NSMutableArray *badgeArray = [NSMutableArray array];\n        for (NSDictionary *dict in data) {\n            BadgeCountModel *model = [[BadgeCountModel alloc] init];\n            model.code = [NSString stringWithFormat:@\"%@\",dict[@\"key\"]];\n            model.value = [NSString stringWithFormat:@\"%@\",dict[@\"value\"]];\n            [badgeArray addObject:model];\n            NSIndexPath *path = [self getIndexPathWithCode:model.code];\n            if (!path) {\n                continue;\n            }\n            [weakSelf.badgeDict setObject:model.value forKey:path];\n        }\n        [weakSelf.collectionView reloadData];\n        [[GLMenuManager shareInstance] setRedPointArray:badgeArray];\n        dispatch_semaphore_signal(semaphore);\n    } andError:^(NSError *error) {\n        dispatch_semaphore_signal(semaphore);\n    }];\n});\n```\n\n## 2. 隐藏UITabBarController上的按钮\n```\n// 方法\n- (void)hideContentController:(UIViewController*)content{\n    [content willMoveToParentViewController:nil];// 1\n    [content.view removeFromSuperview];// 2\n    [content removeFromParentViewController];// 3\n}\n\n// 调用\n[self hideContentController:self.tabBarController.viewControllers[0]];\n```\n\n## 3. 在子视图中获取父控制器、父视图\n#### Objective-C\n```\n/**\n获取父控制器\n\n@param view 当前视图\n@param className 需要获取的控制器名称\n@return 返回控制器对象\n*/\n- (UIViewController *)LCZGetSuperViewController:(UIView *)currentview superViewControllerClassName:(NSString *)className\n{\n    for (UIView* next = [current superview]; next; next = next.superview) {\n    UIResponder *nextResponder = [next nextResponder];\n        if ([nextResponder isKindOfClass:[NSClassFromString(className) class]]) {\n            return (UIViewController *)nextResponder;\n        }\n    }\n    return nil;\n}\n\n/**\n获取当前视图中的目标父视图\n\n@param currentView 当前视图\n@param superView 父视图\n@return 父视图对象\n*/\n- (UIView *)LCZGetSuperView:(UIView *)currentView superView:(UIView *)superView {\n    UIView *view = currentView.superview;\n    while (![view isKindOfClass:[superView class]]) {\n        if (view.superview == nil) {\n            return nil;\n        } else {\n        view = [view superview];\n        }\n    }\n    return view;\n}\n```\n\n#### Swift\n```\n/// 通过当前视图获取父视图的控制器\n///\n/// - Parameters:\n///   - currentView: 当前视图\n///   - viewController: 需要获取到的控制器\n/// - Returns: 返回控制器\nfunc LCZGetSuperViewController<T: UIViewController>(currentView:UIView, viewController: T.Type) -> T? {\n    var view: UIView = currentView.superview!\n    while view.next!.isKind(of: T.self) != true {\n        guard view.superview != nil else {\n            return nil\n        }\n        view = view.superview!\n    }\n    return view.next as? T\n}\n\n/// 获取当前视图中的目标父视图\n///\n/// - Parameters:\n///   - currentView: 当前视图\n///   - superView: 目标父视图\n/// - Returns: 返回父视图\npublic func LCZGetSuperView<T: UIView>(currentView: UIView, superView: T.Type) -> T? {\n    var view: UIView = currentView.superview!\n    while view.isKind(of: T.self) != true {\n        guard view.superview != nil else {\n            return nil\n        }\n        view = view.superview!\n        }\n    return view as? T\n}\n```\n\n## 4. Masonry优先完全显示内容、抵抗压缩\n```\n// 优先完全显示内容\n[self.titleLabel setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\n// 抵抗压缩\n[self.titleLabel setContentCompressionResistancePriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];\n```\n\n## 5. SnapKit优先完全显示内容、抵抗压缩\n```\nself.title.setContentHuggingPriority(.required, for: .horizontal)\nself.title.setContentCompressionResistancePriority(.required, for: .horizontal)\n```\n\n## 6. UITableView自适应高度\n```\nself.homeTableView.estimatedRowHeight = 44\nself.homeTableView.rowHeight = UITableViewAutomaticDimension;\n```\n\n## 7. GCD单例\n```\n+ (instancetype)shared {\n    static Share *shared = nil;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        shared = [[Share alloc]init];\n    });\n    return shared;\n}\n```\n\n\n","slug":"2019-3-07 iOS开发记录","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzhe0004ss7dcqaa0s62","content":"<p>记录点常用方法、属性以及遇到的问题</p>\n<h2 id=\"1-GCD信号量\"><a href=\"#1-GCD信号量\" class=\"headerlink\" title=\"1. GCD信号量\"></a>1. GCD信号量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建信号量</span><br><span class=\"line\">dispatch_semaphore_t semaphore = dispatch_semaphore_create(1);</span><br><span class=\"line\">dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);</span><br><span class=\"line\">dispatch_async(queue, ^&#123;</span><br><span class=\"line\">    // 等待信号量</span><br><span class=\"line\">    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class=\"line\">    // 发起网络请求</span><br><span class=\"line\">    [BadgeCountModel HomeBadgeCountBlock:^(NSDictionary *data) &#123;</span><br><span class=\"line\">        NSNumber *num = data[@&quot;num&quot;];</span><br><span class=\"line\">        if (num.integerValue &gt; 0 ) &#123;</span><br><span class=\"line\">            weakSelf.rightBt.isShowBadge = YES;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            weakSelf.rightBt.isShowBadge = NO;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // 发送信号量</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125; andError:^(NSError *error) &#123;</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125;]; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_async(queue, ^&#123;</span><br><span class=\"line\">    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class=\"line\">    // 发起网络请求</span><br><span class=\"line\">    [BadgeCountModel HomeDetailBadgeCountBlock:^(NSArray *data) &#123;</span><br><span class=\"line\">        if (!weakSelf.badgeDict) &#123;</span><br><span class=\"line\">            weakSelf.badgeDict = [NSMutableDictionary dictionary];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        [weakSelf.badgeDict removeAllObjects];</span><br><span class=\"line\">        NSMutableArray *badgeArray = [NSMutableArray array];</span><br><span class=\"line\">        for (NSDictionary *dict in data) &#123;</span><br><span class=\"line\">            BadgeCountModel *model = [[BadgeCountModel alloc] init];</span><br><span class=\"line\">            model.code = [NSString stringWithFormat:@&quot;%@&quot;,dict[@&quot;key&quot;]];</span><br><span class=\"line\">            model.value = [NSString stringWithFormat:@&quot;%@&quot;,dict[@&quot;value&quot;]];</span><br><span class=\"line\">            [badgeArray addObject:model];</span><br><span class=\"line\">            NSIndexPath *path = [self getIndexPathWithCode:model.code];</span><br><span class=\"line\">            if (!path) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            [weakSelf.badgeDict setObject:model.value forKey:path];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        [weakSelf.collectionView reloadData];</span><br><span class=\"line\">        [[GLMenuManager shareInstance] setRedPointArray:badgeArray];</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125; andError:^(NSError *error) &#123;</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-隐藏UITabBarController上的按钮\"><a href=\"#2-隐藏UITabBarController上的按钮\" class=\"headerlink\" title=\"2. 隐藏UITabBarController上的按钮\"></a>2. 隐藏UITabBarController上的按钮</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 方法</span><br><span class=\"line\">- (void)hideContentController:(UIViewController*)content&#123;</span><br><span class=\"line\">    [content willMoveToParentViewController:nil];// 1</span><br><span class=\"line\">    [content.view removeFromSuperview];// 2</span><br><span class=\"line\">    [content removeFromParentViewController];// 3</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 调用</span><br><span class=\"line\">[self hideContentController:self.tabBarController.viewControllers[0]];</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-在子视图中获取父控制器、父视图\"><a href=\"#3-在子视图中获取父控制器、父视图\" class=\"headerlink\" title=\"3. 在子视图中获取父控制器、父视图\"></a>3. 在子视图中获取父控制器、父视图</h2><h4 id=\"Objective-C\"><a href=\"#Objective-C\" class=\"headerlink\" title=\"Objective-C\"></a>Objective-C</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">获取父控制器</span><br><span class=\"line\"></span><br><span class=\"line\">@param view 当前视图</span><br><span class=\"line\">@param className 需要获取的控制器名称</span><br><span class=\"line\">@return 返回控制器对象</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (UIViewController *)LCZGetSuperViewController:(UIView *)currentview superViewControllerClassName:(NSString *)className</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    for (UIView* next = [current superview]; next; next = next.superview) &#123;</span><br><span class=\"line\">    UIResponder *nextResponder = [next nextResponder];</span><br><span class=\"line\">        if ([nextResponder isKindOfClass:[NSClassFromString(className) class]]) &#123;</span><br><span class=\"line\">            return (UIViewController *)nextResponder;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return nil;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">获取当前视图中的目标父视图</span><br><span class=\"line\"></span><br><span class=\"line\">@param currentView 当前视图</span><br><span class=\"line\">@param superView 父视图</span><br><span class=\"line\">@return 父视图对象</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (UIView *)LCZGetSuperView:(UIView *)currentView superView:(UIView *)superView &#123;</span><br><span class=\"line\">    UIView *view = currentView.superview;</span><br><span class=\"line\">    while (![view isKindOfClass:[superView class]]) &#123;</span><br><span class=\"line\">        if (view.superview == nil) &#123;</span><br><span class=\"line\">            return nil;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">        view = [view superview];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return view;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Swift\"><a href=\"#Swift\" class=\"headerlink\" title=\"Swift\"></a>Swift</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// 通过当前视图获取父视图的控制器</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Parameters:</span><br><span class=\"line\">///   - currentView: 当前视图</span><br><span class=\"line\">///   - viewController: 需要获取到的控制器</span><br><span class=\"line\">/// - Returns: 返回控制器</span><br><span class=\"line\">func LCZGetSuperViewController&lt;T: UIViewController&gt;(currentView:UIView, viewController: T.Type) -&gt; T? &#123;</span><br><span class=\"line\">    var view: UIView = currentView.superview!</span><br><span class=\"line\">    while view.next!.isKind(of: T.self) != true &#123;</span><br><span class=\"line\">        guard view.superview != nil else &#123;</span><br><span class=\"line\">            return nil</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        view = view.superview!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return view.next as? T</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/// 获取当前视图中的目标父视图</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Parameters:</span><br><span class=\"line\">///   - currentView: 当前视图</span><br><span class=\"line\">///   - superView: 目标父视图</span><br><span class=\"line\">/// - Returns: 返回父视图</span><br><span class=\"line\">public func LCZGetSuperView&lt;T: UIView&gt;(currentView: UIView, superView: T.Type) -&gt; T? &#123;</span><br><span class=\"line\">    var view: UIView = currentView.superview!</span><br><span class=\"line\">    while view.isKind(of: T.self) != true &#123;</span><br><span class=\"line\">        guard view.superview != nil else &#123;</span><br><span class=\"line\">            return nil</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        view = view.superview!</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    return view as? T</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Masonry优先完全显示内容、抵抗压缩\"><a href=\"#4-Masonry优先完全显示内容、抵抗压缩\" class=\"headerlink\" title=\"4. Masonry优先完全显示内容、抵抗压缩\"></a>4. Masonry优先完全显示内容、抵抗压缩</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 优先完全显示内容</span><br><span class=\"line\">[self.titleLabel setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];</span><br><span class=\"line\">// 抵抗压缩</span><br><span class=\"line\">[self.titleLabel setContentCompressionResistancePriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-SnapKit优先完全显示内容、抵抗压缩\"><a href=\"#5-SnapKit优先完全显示内容、抵抗压缩\" class=\"headerlink\" title=\"5. SnapKit优先完全显示内容、抵抗压缩\"></a>5. SnapKit优先完全显示内容、抵抗压缩</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.title.setContentHuggingPriority(.required, for: .horizontal)</span><br><span class=\"line\">self.title.setContentCompressionResistancePriority(.required, for: .horizontal)</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-UITableView自适应高度\"><a href=\"#6-UITableView自适应高度\" class=\"headerlink\" title=\"6. UITableView自适应高度\"></a>6. UITableView自适应高度</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.homeTableView.estimatedRowHeight = 44</span><br><span class=\"line\">self.homeTableView.rowHeight = UITableViewAutomaticDimension;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-GCD单例\"><a href=\"#7-GCD单例\" class=\"headerlink\" title=\"7. GCD单例\"></a>7. GCD单例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (instancetype)shared &#123;</span><br><span class=\"line\">    static Share *shared = nil;</span><br><span class=\"line\">    static dispatch_once_t onceToken;</span><br><span class=\"line\">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class=\"line\">        shared = [[Share alloc]init];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    return shared;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>记录点常用方法、属性以及遇到的问题</p>\n<h2 id=\"1-GCD信号量\"><a href=\"#1-GCD信号量\" class=\"headerlink\" title=\"1. GCD信号量\"></a>1. GCD信号量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建信号量</span><br><span class=\"line\">dispatch_semaphore_t semaphore = dispatch_semaphore_create(1);</span><br><span class=\"line\">dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);</span><br><span class=\"line\">dispatch_async(queue, ^&#123;</span><br><span class=\"line\">    // 等待信号量</span><br><span class=\"line\">    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class=\"line\">    // 发起网络请求</span><br><span class=\"line\">    [BadgeCountModel HomeBadgeCountBlock:^(NSDictionary *data) &#123;</span><br><span class=\"line\">        NSNumber *num = data[@&quot;num&quot;];</span><br><span class=\"line\">        if (num.integerValue &gt; 0 ) &#123;</span><br><span class=\"line\">            weakSelf.rightBt.isShowBadge = YES;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            weakSelf.rightBt.isShowBadge = NO;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // 发送信号量</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125; andError:^(NSError *error) &#123;</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125;]; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_async(queue, ^&#123;</span><br><span class=\"line\">    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class=\"line\">    // 发起网络请求</span><br><span class=\"line\">    [BadgeCountModel HomeDetailBadgeCountBlock:^(NSArray *data) &#123;</span><br><span class=\"line\">        if (!weakSelf.badgeDict) &#123;</span><br><span class=\"line\">            weakSelf.badgeDict = [NSMutableDictionary dictionary];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        [weakSelf.badgeDict removeAllObjects];</span><br><span class=\"line\">        NSMutableArray *badgeArray = [NSMutableArray array];</span><br><span class=\"line\">        for (NSDictionary *dict in data) &#123;</span><br><span class=\"line\">            BadgeCountModel *model = [[BadgeCountModel alloc] init];</span><br><span class=\"line\">            model.code = [NSString stringWithFormat:@&quot;%@&quot;,dict[@&quot;key&quot;]];</span><br><span class=\"line\">            model.value = [NSString stringWithFormat:@&quot;%@&quot;,dict[@&quot;value&quot;]];</span><br><span class=\"line\">            [badgeArray addObject:model];</span><br><span class=\"line\">            NSIndexPath *path = [self getIndexPathWithCode:model.code];</span><br><span class=\"line\">            if (!path) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            [weakSelf.badgeDict setObject:model.value forKey:path];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        [weakSelf.collectionView reloadData];</span><br><span class=\"line\">        [[GLMenuManager shareInstance] setRedPointArray:badgeArray];</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125; andError:^(NSError *error) &#123;</span><br><span class=\"line\">        dispatch_semaphore_signal(semaphore);</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-隐藏UITabBarController上的按钮\"><a href=\"#2-隐藏UITabBarController上的按钮\" class=\"headerlink\" title=\"2. 隐藏UITabBarController上的按钮\"></a>2. 隐藏UITabBarController上的按钮</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 方法</span><br><span class=\"line\">- (void)hideContentController:(UIViewController*)content&#123;</span><br><span class=\"line\">    [content willMoveToParentViewController:nil];// 1</span><br><span class=\"line\">    [content.view removeFromSuperview];// 2</span><br><span class=\"line\">    [content removeFromParentViewController];// 3</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 调用</span><br><span class=\"line\">[self hideContentController:self.tabBarController.viewControllers[0]];</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-在子视图中获取父控制器、父视图\"><a href=\"#3-在子视图中获取父控制器、父视图\" class=\"headerlink\" title=\"3. 在子视图中获取父控制器、父视图\"></a>3. 在子视图中获取父控制器、父视图</h2><h4 id=\"Objective-C\"><a href=\"#Objective-C\" class=\"headerlink\" title=\"Objective-C\"></a>Objective-C</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">获取父控制器</span><br><span class=\"line\"></span><br><span class=\"line\">@param view 当前视图</span><br><span class=\"line\">@param className 需要获取的控制器名称</span><br><span class=\"line\">@return 返回控制器对象</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (UIViewController *)LCZGetSuperViewController:(UIView *)currentview superViewControllerClassName:(NSString *)className</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    for (UIView* next = [current superview]; next; next = next.superview) &#123;</span><br><span class=\"line\">    UIResponder *nextResponder = [next nextResponder];</span><br><span class=\"line\">        if ([nextResponder isKindOfClass:[NSClassFromString(className) class]]) &#123;</span><br><span class=\"line\">            return (UIViewController *)nextResponder;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return nil;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">获取当前视图中的目标父视图</span><br><span class=\"line\"></span><br><span class=\"line\">@param currentView 当前视图</span><br><span class=\"line\">@param superView 父视图</span><br><span class=\"line\">@return 父视图对象</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (UIView *)LCZGetSuperView:(UIView *)currentView superView:(UIView *)superView &#123;</span><br><span class=\"line\">    UIView *view = currentView.superview;</span><br><span class=\"line\">    while (![view isKindOfClass:[superView class]]) &#123;</span><br><span class=\"line\">        if (view.superview == nil) &#123;</span><br><span class=\"line\">            return nil;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">        view = [view superview];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return view;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Swift\"><a href=\"#Swift\" class=\"headerlink\" title=\"Swift\"></a>Swift</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// 通过当前视图获取父视图的控制器</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Parameters:</span><br><span class=\"line\">///   - currentView: 当前视图</span><br><span class=\"line\">///   - viewController: 需要获取到的控制器</span><br><span class=\"line\">/// - Returns: 返回控制器</span><br><span class=\"line\">func LCZGetSuperViewController&lt;T: UIViewController&gt;(currentView:UIView, viewController: T.Type) -&gt; T? &#123;</span><br><span class=\"line\">    var view: UIView = currentView.superview!</span><br><span class=\"line\">    while view.next!.isKind(of: T.self) != true &#123;</span><br><span class=\"line\">        guard view.superview != nil else &#123;</span><br><span class=\"line\">            return nil</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        view = view.superview!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return view.next as? T</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/// 获取当前视图中的目标父视图</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Parameters:</span><br><span class=\"line\">///   - currentView: 当前视图</span><br><span class=\"line\">///   - superView: 目标父视图</span><br><span class=\"line\">/// - Returns: 返回父视图</span><br><span class=\"line\">public func LCZGetSuperView&lt;T: UIView&gt;(currentView: UIView, superView: T.Type) -&gt; T? &#123;</span><br><span class=\"line\">    var view: UIView = currentView.superview!</span><br><span class=\"line\">    while view.isKind(of: T.self) != true &#123;</span><br><span class=\"line\">        guard view.superview != nil else &#123;</span><br><span class=\"line\">            return nil</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        view = view.superview!</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    return view as? T</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Masonry优先完全显示内容、抵抗压缩\"><a href=\"#4-Masonry优先完全显示内容、抵抗压缩\" class=\"headerlink\" title=\"4. Masonry优先完全显示内容、抵抗压缩\"></a>4. Masonry优先完全显示内容、抵抗压缩</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 优先完全显示内容</span><br><span class=\"line\">[self.titleLabel setContentHuggingPriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];</span><br><span class=\"line\">// 抵抗压缩</span><br><span class=\"line\">[self.titleLabel setContentCompressionResistancePriority:UILayoutPriorityRequired forAxis:UILayoutConstraintAxisHorizontal];</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-SnapKit优先完全显示内容、抵抗压缩\"><a href=\"#5-SnapKit优先完全显示内容、抵抗压缩\" class=\"headerlink\" title=\"5. SnapKit优先完全显示内容、抵抗压缩\"></a>5. SnapKit优先完全显示内容、抵抗压缩</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.title.setContentHuggingPriority(.required, for: .horizontal)</span><br><span class=\"line\">self.title.setContentCompressionResistancePriority(.required, for: .horizontal)</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-UITableView自适应高度\"><a href=\"#6-UITableView自适应高度\" class=\"headerlink\" title=\"6. UITableView自适应高度\"></a>6. UITableView自适应高度</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.homeTableView.estimatedRowHeight = 44</span><br><span class=\"line\">self.homeTableView.rowHeight = UITableViewAutomaticDimension;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-GCD单例\"><a href=\"#7-GCD单例\" class=\"headerlink\" title=\"7. GCD单例\"></a>7. GCD单例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (instancetype)shared &#123;</span><br><span class=\"line\">    static Share *shared = nil;</span><br><span class=\"line\">    static dispatch_once_t onceToken;</span><br><span class=\"line\">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class=\"line\">        shared = [[Share alloc]init];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    return shared;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"iOS Alamofire实时检测网络状态","date":"2019-03-28T01:43:23.000Z","_content":"实时检测网络状态\n\n## 1. 创建全局NetworkReachabilityManager对象\n```\nlet newsHomeNetworkReachabilityManager = NetworkReachabilityManager(host: \"http://www.baidu.com\")\n```\n\n## 2. 开启网络监控\n```\nnewsHomeNetworkReachabilityManager?.startListening()\n```\n\n## 3. 监听网络变化\n```\nnewsHomeNetworkReachabilityManager?.listener = { state in\n    switch state {\n        case .unknown:\n            LCZProgressHUD.showError(title: \"似乎与网络断开了连接!\")\n            break\n        case .notReachable:\n            LCZProgressHUD.showError(title: \"似乎与网络断开了连接!\")\n            break\n        case .reachable(_):\n            break\n    }\n}\n```\n## 4. 不需要时停止监控\n```\nnewsHomeNetworkReachabilityManager?.stopListening()\n```\n\n## 5. 其它常用属性\n```\nopen var isReachable: Bool // 当前网络是蜂窝网络或者是WiFi连接\n\nopen var isReachableOnWWAN: Bool // 当前网络是通过蜂窝网络连接\n\nopen var isReachableOnEthernetOrWiFi: Bool // 当前网络是通过WiFi网络连接\n\nopen var networkReachabilityStatus: NetworkReachabilityStatus // 当前网络状态\n```\n\n## 6. 注意事项\n### 6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放\n### 6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调\n\n\n\n","source":"_posts/2019-3-28 iOS开发 实时检测网络状态.md","raw":"---\nlayout: post\ntitle: \"iOS Alamofire实时检测网络状态\"\ndate: 2019-03-28 9:43:23\ntags: iOS\n---\n实时检测网络状态\n\n## 1. 创建全局NetworkReachabilityManager对象\n```\nlet newsHomeNetworkReachabilityManager = NetworkReachabilityManager(host: \"http://www.baidu.com\")\n```\n\n## 2. 开启网络监控\n```\nnewsHomeNetworkReachabilityManager?.startListening()\n```\n\n## 3. 监听网络变化\n```\nnewsHomeNetworkReachabilityManager?.listener = { state in\n    switch state {\n        case .unknown:\n            LCZProgressHUD.showError(title: \"似乎与网络断开了连接!\")\n            break\n        case .notReachable:\n            LCZProgressHUD.showError(title: \"似乎与网络断开了连接!\")\n            break\n        case .reachable(_):\n            break\n    }\n}\n```\n## 4. 不需要时停止监控\n```\nnewsHomeNetworkReachabilityManager?.stopListening()\n```\n\n## 5. 其它常用属性\n```\nopen var isReachable: Bool // 当前网络是蜂窝网络或者是WiFi连接\n\nopen var isReachableOnWWAN: Bool // 当前网络是通过蜂窝网络连接\n\nopen var isReachableOnEthernetOrWiFi: Bool // 当前网络是通过WiFi网络连接\n\nopen var networkReachabilityStatus: NetworkReachabilityStatus // 当前网络状态\n```\n\n## 6. 注意事项\n### 6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放\n### 6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调\n\n\n\n","slug":"2019-3-28 iOS开发 实时检测网络状态","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzhg0005ss7ddp9fgt77","content":"<p>实时检测网络状态</p>\n<h2 id=\"1-创建全局NetworkReachabilityManager对象\"><a href=\"#1-创建全局NetworkReachabilityManager对象\" class=\"headerlink\" title=\"1. 创建全局NetworkReachabilityManager对象\"></a>1. 创建全局NetworkReachabilityManager对象</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let newsHomeNetworkReachabilityManager = NetworkReachabilityManager(host: &quot;http://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-开启网络监控\"><a href=\"#2-开启网络监控\" class=\"headerlink\" title=\"2. 开启网络监控\"></a>2. 开启网络监控</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.startListening()</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-监听网络变化\"><a href=\"#3-监听网络变化\" class=\"headerlink\" title=\"3. 监听网络变化\"></a>3. 监听网络变化</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.listener = &#123; state in</span><br><span class=\"line\">    switch state &#123;</span><br><span class=\"line\">        case .unknown:</span><br><span class=\"line\">            LCZProgressHUD.showError(title: &quot;似乎与网络断开了连接!&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">        case .notReachable:</span><br><span class=\"line\">            LCZProgressHUD.showError(title: &quot;似乎与网络断开了连接!&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">        case .reachable(_):</span><br><span class=\"line\">            break</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-不需要时停止监控\"><a href=\"#4-不需要时停止监控\" class=\"headerlink\" title=\"4. 不需要时停止监控\"></a>4. 不需要时停止监控</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.stopListening()</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-其它常用属性\"><a href=\"#5-其它常用属性\" class=\"headerlink\" title=\"5. 其它常用属性\"></a>5. 其它常用属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open var isReachable: Bool // 当前网络是蜂窝网络或者是WiFi连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var isReachableOnWWAN: Bool // 当前网络是通过蜂窝网络连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var isReachableOnEthernetOrWiFi: Bool // 当前网络是通过WiFi网络连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var networkReachabilityStatus: NetworkReachabilityStatus // 当前网络状态</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-注意事项\"><a href=\"#6-注意事项\" class=\"headerlink\" title=\"6. 注意事项\"></a>6. 注意事项</h2><h3 id=\"6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放\"><a href=\"#6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放\" class=\"headerlink\" title=\"6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放\"></a>6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放</h3><h3 id=\"6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调\"><a href=\"#6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调\" class=\"headerlink\" title=\"6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调\"></a>6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调</h3>","site":{"data":{}},"excerpt":"","more":"<p>实时检测网络状态</p>\n<h2 id=\"1-创建全局NetworkReachabilityManager对象\"><a href=\"#1-创建全局NetworkReachabilityManager对象\" class=\"headerlink\" title=\"1. 创建全局NetworkReachabilityManager对象\"></a>1. 创建全局NetworkReachabilityManager对象</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let newsHomeNetworkReachabilityManager = NetworkReachabilityManager(host: &quot;http://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-开启网络监控\"><a href=\"#2-开启网络监控\" class=\"headerlink\" title=\"2. 开启网络监控\"></a>2. 开启网络监控</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.startListening()</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-监听网络变化\"><a href=\"#3-监听网络变化\" class=\"headerlink\" title=\"3. 监听网络变化\"></a>3. 监听网络变化</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.listener = &#123; state in</span><br><span class=\"line\">    switch state &#123;</span><br><span class=\"line\">        case .unknown:</span><br><span class=\"line\">            LCZProgressHUD.showError(title: &quot;似乎与网络断开了连接!&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">        case .notReachable:</span><br><span class=\"line\">            LCZProgressHUD.showError(title: &quot;似乎与网络断开了连接!&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">        case .reachable(_):</span><br><span class=\"line\">            break</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-不需要时停止监控\"><a href=\"#4-不需要时停止监控\" class=\"headerlink\" title=\"4. 不需要时停止监控\"></a>4. 不需要时停止监控</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newsHomeNetworkReachabilityManager?.stopListening()</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-其它常用属性\"><a href=\"#5-其它常用属性\" class=\"headerlink\" title=\"5. 其它常用属性\"></a>5. 其它常用属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open var isReachable: Bool // 当前网络是蜂窝网络或者是WiFi连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var isReachableOnWWAN: Bool // 当前网络是通过蜂窝网络连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var isReachableOnEthernetOrWiFi: Bool // 当前网络是通过WiFi网络连接</span><br><span class=\"line\"></span><br><span class=\"line\">open var networkReachabilityStatus: NetworkReachabilityStatus // 当前网络状态</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-注意事项\"><a href=\"#6-注意事项\" class=\"headerlink\" title=\"6. 注意事项\"></a>6. 注意事项</h2><h3 id=\"6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放\"><a href=\"#6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放\" class=\"headerlink\" title=\"6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放\"></a>6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放</h3><h3 id=\"6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调\"><a href=\"#6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调\" class=\"headerlink\" title=\"6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调\"></a>6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调</h3>"},{"layout":"post","title":"iOS RxDataSources","date":"2019-04-02T02:48:47.000Z","_content":"RxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装\n\n## 1. UITableView\n数据源类型：` RxTableViewSectionedReloadDataSource`，`RxTableViewSectionedAnimatedDataSource`\n\n## 2. UICollectionView\n数据源类型：` RxTableViewSectionedReloadDataSource`，`RxCollectionViewSectionedAnimatedDataSource`\n\n## 3. ModelType\n模型类型：`SectionModel`，`AnimatableSectionModel`\n\n## 4. 使用动画数据源，自定义模型需遵守`IdentifiableType`协议\n```\nclass NewsListModel: Object,Mappable {\n    @objc dynamic var publishTime: String? // 发布时间\n    @objc dynamic var category: String? // 类型\n    @objc dynamic var source: String? // 来源\n    @objc dynamic var newsId: String? // 新闻ID\n    @objc dynamic var title: String? // 标题\n    @objc dynamic var newsImg: String? //新闻小图片url\n\n    required convenience init?(map: Map) {\n        self.init()\n    }\n\n    func mapping(map: Map) {\n        publishTime   <- map[\"publishTime\"]\n        category   <- map[\"category\"]\n        source   <- map[\"source\"]\n        newsId   <- map[\"newsId\"]\n        title   <- map[\"title\"]\n        newsImg   <- map[\"newsImg\"]\n    }\n}\n\nextension NewsListModel: IdentifiableType {\n    var identity: NewsListModel {\n    return self\n    }\n\n    typealias Identity = NewsListModel\n}\n```\n\n## 5. [Demo](https://github.com/lczalh/Diary)\n\n\n\n\n","source":"_posts/2019-4-02 iOS开发 RxDataSources.md","raw":"---\nlayout: post\ntitle: \"iOS RxDataSources\"\ndate: 2019-04-02 10:48:47\ntags: iOS\n---\nRxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装\n\n## 1. UITableView\n数据源类型：` RxTableViewSectionedReloadDataSource`，`RxTableViewSectionedAnimatedDataSource`\n\n## 2. UICollectionView\n数据源类型：` RxTableViewSectionedReloadDataSource`，`RxCollectionViewSectionedAnimatedDataSource`\n\n## 3. ModelType\n模型类型：`SectionModel`，`AnimatableSectionModel`\n\n## 4. 使用动画数据源，自定义模型需遵守`IdentifiableType`协议\n```\nclass NewsListModel: Object,Mappable {\n    @objc dynamic var publishTime: String? // 发布时间\n    @objc dynamic var category: String? // 类型\n    @objc dynamic var source: String? // 来源\n    @objc dynamic var newsId: String? // 新闻ID\n    @objc dynamic var title: String? // 标题\n    @objc dynamic var newsImg: String? //新闻小图片url\n\n    required convenience init?(map: Map) {\n        self.init()\n    }\n\n    func mapping(map: Map) {\n        publishTime   <- map[\"publishTime\"]\n        category   <- map[\"category\"]\n        source   <- map[\"source\"]\n        newsId   <- map[\"newsId\"]\n        title   <- map[\"title\"]\n        newsImg   <- map[\"newsImg\"]\n    }\n}\n\nextension NewsListModel: IdentifiableType {\n    var identity: NewsListModel {\n    return self\n    }\n\n    typealias Identity = NewsListModel\n}\n```\n\n## 5. [Demo](https://github.com/lczalh/Diary)\n\n\n\n\n","slug":"2019-4-02 iOS开发 RxDataSources","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzhq0008ss7dxyefnukb","content":"<p>RxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装</p>\n<h2 id=\"1-UITableView\"><a href=\"#1-UITableView\" class=\"headerlink\" title=\"1. UITableView\"></a>1. UITableView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxTableViewSectionedAnimatedDataSource</code></p>\n<h2 id=\"2-UICollectionView\"><a href=\"#2-UICollectionView\" class=\"headerlink\" title=\"2. UICollectionView\"></a>2. UICollectionView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxCollectionViewSectionedAnimatedDataSource</code></p>\n<h2 id=\"3-ModelType\"><a href=\"#3-ModelType\" class=\"headerlink\" title=\"3. ModelType\"></a>3. ModelType</h2><p>模型类型：<code>SectionModel</code>，<code>AnimatableSectionModel</code></p>\n<h2 id=\"4-使用动画数据源，自定义模型需遵守IdentifiableType协议\"><a href=\"#4-使用动画数据源，自定义模型需遵守IdentifiableType协议\" class=\"headerlink\" title=\"4. 使用动画数据源，自定义模型需遵守IdentifiableType协议\"></a>4. 使用动画数据源，自定义模型需遵守<code>IdentifiableType</code>协议</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class NewsListModel: Object,Mappable &#123;</span><br><span class=\"line\">    @objc dynamic var publishTime: String? // 发布时间</span><br><span class=\"line\">    @objc dynamic var category: String? // 类型</span><br><span class=\"line\">    @objc dynamic var source: String? // 来源</span><br><span class=\"line\">    @objc dynamic var newsId: String? // 新闻ID</span><br><span class=\"line\">    @objc dynamic var title: String? // 标题</span><br><span class=\"line\">    @objc dynamic var newsImg: String? //新闻小图片url</span><br><span class=\"line\"></span><br><span class=\"line\">    required convenience init?(map: Map) &#123;</span><br><span class=\"line\">        self.init()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    func mapping(map: Map) &#123;</span><br><span class=\"line\">        publishTime   &lt;- map[&quot;publishTime&quot;]</span><br><span class=\"line\">        category   &lt;- map[&quot;category&quot;]</span><br><span class=\"line\">        source   &lt;- map[&quot;source&quot;]</span><br><span class=\"line\">        newsId   &lt;- map[&quot;newsId&quot;]</span><br><span class=\"line\">        title   &lt;- map[&quot;title&quot;]</span><br><span class=\"line\">        newsImg   &lt;- map[&quot;newsImg&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">extension NewsListModel: IdentifiableType &#123;</span><br><span class=\"line\">    var identity: NewsListModel &#123;</span><br><span class=\"line\">    return self</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    typealias Identity = NewsListModel</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Demo\"><a href=\"#5-Demo\" class=\"headerlink\" title=\"5. Demo\"></a>5. <a href=\"https://github.com/lczalh/Diary\" target=\"_blank\" rel=\"noopener\">Demo</a></h2>","site":{"data":{}},"excerpt":"","more":"<p>RxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装</p>\n<h2 id=\"1-UITableView\"><a href=\"#1-UITableView\" class=\"headerlink\" title=\"1. UITableView\"></a>1. UITableView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxTableViewSectionedAnimatedDataSource</code></p>\n<h2 id=\"2-UICollectionView\"><a href=\"#2-UICollectionView\" class=\"headerlink\" title=\"2. UICollectionView\"></a>2. UICollectionView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxCollectionViewSectionedAnimatedDataSource</code></p>\n<h2 id=\"3-ModelType\"><a href=\"#3-ModelType\" class=\"headerlink\" title=\"3. ModelType\"></a>3. ModelType</h2><p>模型类型：<code>SectionModel</code>，<code>AnimatableSectionModel</code></p>\n<h2 id=\"4-使用动画数据源，自定义模型需遵守IdentifiableType协议\"><a href=\"#4-使用动画数据源，自定义模型需遵守IdentifiableType协议\" class=\"headerlink\" title=\"4. 使用动画数据源，自定义模型需遵守IdentifiableType协议\"></a>4. 使用动画数据源，自定义模型需遵守<code>IdentifiableType</code>协议</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class NewsListModel: Object,Mappable &#123;</span><br><span class=\"line\">    @objc dynamic var publishTime: String? // 发布时间</span><br><span class=\"line\">    @objc dynamic var category: String? // 类型</span><br><span class=\"line\">    @objc dynamic var source: String? // 来源</span><br><span class=\"line\">    @objc dynamic var newsId: String? // 新闻ID</span><br><span class=\"line\">    @objc dynamic var title: String? // 标题</span><br><span class=\"line\">    @objc dynamic var newsImg: String? //新闻小图片url</span><br><span class=\"line\"></span><br><span class=\"line\">    required convenience init?(map: Map) &#123;</span><br><span class=\"line\">        self.init()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    func mapping(map: Map) &#123;</span><br><span class=\"line\">        publishTime   &lt;- map[&quot;publishTime&quot;]</span><br><span class=\"line\">        category   &lt;- map[&quot;category&quot;]</span><br><span class=\"line\">        source   &lt;- map[&quot;source&quot;]</span><br><span class=\"line\">        newsId   &lt;- map[&quot;newsId&quot;]</span><br><span class=\"line\">        title   &lt;- map[&quot;title&quot;]</span><br><span class=\"line\">        newsImg   &lt;- map[&quot;newsImg&quot;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">extension NewsListModel: IdentifiableType &#123;</span><br><span class=\"line\">    var identity: NewsListModel &#123;</span><br><span class=\"line\">    return self</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    typealias Identity = NewsListModel</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Demo\"><a href=\"#5-Demo\" class=\"headerlink\" title=\"5. Demo\"></a>5. <a href=\"https://github.com/lczalh/Diary\" target=\"_blank\" rel=\"noopener\">Demo</a></h2>"},{"layout":"post","title":"MySQL的基本使用","date":"2019-04-16T12:48:01.000Z","_content":"![markdown](https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true \"数据类型\")\n## 1. DDL（数据定义语言）\n### 1.1 操作数据库\n#### 1.1.1 增\n创建数据库：\n```\n    方式一：CREATE DATABASE 数据库名; -- 例：CREATE DATABASE mysql;\n    方式二：CREATE DATABASE 数据库名 CHARSET 编码; -- 例：CREATE DATABASE mysql CHARSET utf8;\n```\n#### 1.1.2 删\n删除数据库：`DROP DATABASE 数据库名; -- 例：DROP DATABASE mysql;`\n#### 1.1.3 改\n修改正在使用的数据库：`USE 数据库名; -- 例：USE mysql;`\n#### 1.1.4 查\n查询正在使用的数据库：`SELECT DATABASE();`\n查询mysql中的所有数据库：`SHOW DATABASES;`\n查询某一个数据库的详细信息：`SHOW CREATE DATABASE 数据库名; -- 例：SHOW CREATE DATABASE  mysql;`\n\n### 1.2 操作数据库表\n#### 1.2.1 增\n创建表：\n```\n    CREATE TABLE 数据库名(\n        字段名 数据类型(长度) 约束,\n        字段名 数据类型(长度) 约束\n    );\n    例：\n    CREATE TABLE student(\n        sid INT PRIMARY KEY, -- 主键约束\n        sname VARCHAR(30),\n        sage INT\n    );\n```\n\n#### 1.2.2 删\n删除表：`DROP TABLE 表名; -- 例：DROP TABLE student;`\n#### 1.2.3 查\n查看一个表的详细信息：`DESC 表名; -- 例：DESC student;`\n查看所有表：`SHOW TABLES;`\n#### 1.2.4 改\n修改表名：`RENAME TABLE 表名 TO 新表名; -- 例：RENAME TABLE student TO studentTwo;`\n\n### 1.3 操作数据库表结构\n#### 1.3.1 增\n向表中增加一列：`ALTER TABLE 表名 ADD 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student ADD phone VARCHAR(30);`\n#### 1.3.2 删\n向表中删除一列：`ALTER TABLE 表名 DROP 字段名; -- 例：ALTER TABLE student DROP phone;`\n#### 1.3.3 改\n修改表中的字段名：`ALTER TABLE 表名 CHANGE 字段名 新字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student CHANGE sname mname VARCHAR(30);`\n修改表中的字段中的变量类型和约束：`ALTER TABLE 表名 MODIFY 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student MODIFY sname VARCHAR(10);`\n修改表的字符集：`ALTER TABLE 表名 CHARACYER SET 编码; -- 例：ALTER TABLE student CHARACYER SET utf8;`\n\n## 2. DML（数据操作语言）\n### 2.1 增\n向表中插入一条数据（向表中插入所有字段可省略字段名）：`INSERT INFO 表名 (字段1，字段2) VALUES (值1，值2); -- 例：INSERT INFO student (name，age) VALUES ('张三'，18);` \n### 2.2 删\n删除表中的所有记录：`DELETE FROM 表名; -- 例：DELETE FROM student;`\n删除表中的某一条数据：`DELETE FROM 表名 WHERE 条件; -- 例：DELETE FROM student WHERE name='张三';`\n### 2.3 改\n修改表中所有指定字段的信息：`UPDATE 表名 SET 字段名='值'; -- 例：UPDATE student SET name='李四';`\n修改表中某一条数据的字段信息：`UPDATE 表名 SET 字段名='值' WHERE 条件; -- 例：UPDATE student SET name='李四' WHERE age=18;`  \n\n## 3. 约束\n主键约束（修饰的字段必须唯一且不能为空）：`PRIMARY KEY`\n自动增长约束：`AUTO_INCREMENT`\n\n## 4. 删除表所有数据的两种方式\n方式一：`DELETE FROM 表名; -- 例：DELETE FROM student;`（但是自动增长的值不会重置为1）\n方式二：`TRUNCATE TABLE 表名; -- 例：TRUNCATE TABLE student;`（先摧毁表，在重建表；自动增长的值会重置为1）\n\n## 5. DQL（数据查询语言）\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MySQL/运算符.png?raw=true \"运算符\")\n查询表中所有的数据：`SELECT * FROM 表名; -- 例：SELECT * FROM student;`\n查询表中某个字段的数据：`SELECT 字段名1,字段名2 FROM 表名; -- 例：SELECT name FROM student;`\n查询表中某个字段的数据并去重（存在多个字段时字段名1且字段名2相同时才会去重）：`SELECT DISTINCT 字段名1,字段名2 FROM 表名; -- 例：SELECT DISTINCT name FROM student;`\n别名查询：`SELECT 字段名 AS 别名 FROM student; -- 例：SELECT name AS 姓名 FROM student;`\n查询表中某个字段的所有数据：`SELECT * FROM 表名 WHERE 条件; -- 例：SELECT * FROM student WHERE name='张三';`\n\n\n\n","source":"_posts/2019-4-16 MySQL.md","raw":"---\nlayout: post\ntitle: \"MySQL的基本使用\"\ndate: 2019-04-16 20:48:01\ntags: MySQL\n---\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true \"数据类型\")\n## 1. DDL（数据定义语言）\n### 1.1 操作数据库\n#### 1.1.1 增\n创建数据库：\n```\n    方式一：CREATE DATABASE 数据库名; -- 例：CREATE DATABASE mysql;\n    方式二：CREATE DATABASE 数据库名 CHARSET 编码; -- 例：CREATE DATABASE mysql CHARSET utf8;\n```\n#### 1.1.2 删\n删除数据库：`DROP DATABASE 数据库名; -- 例：DROP DATABASE mysql;`\n#### 1.1.3 改\n修改正在使用的数据库：`USE 数据库名; -- 例：USE mysql;`\n#### 1.1.4 查\n查询正在使用的数据库：`SELECT DATABASE();`\n查询mysql中的所有数据库：`SHOW DATABASES;`\n查询某一个数据库的详细信息：`SHOW CREATE DATABASE 数据库名; -- 例：SHOW CREATE DATABASE  mysql;`\n\n### 1.2 操作数据库表\n#### 1.2.1 增\n创建表：\n```\n    CREATE TABLE 数据库名(\n        字段名 数据类型(长度) 约束,\n        字段名 数据类型(长度) 约束\n    );\n    例：\n    CREATE TABLE student(\n        sid INT PRIMARY KEY, -- 主键约束\n        sname VARCHAR(30),\n        sage INT\n    );\n```\n\n#### 1.2.2 删\n删除表：`DROP TABLE 表名; -- 例：DROP TABLE student;`\n#### 1.2.3 查\n查看一个表的详细信息：`DESC 表名; -- 例：DESC student;`\n查看所有表：`SHOW TABLES;`\n#### 1.2.4 改\n修改表名：`RENAME TABLE 表名 TO 新表名; -- 例：RENAME TABLE student TO studentTwo;`\n\n### 1.3 操作数据库表结构\n#### 1.3.1 增\n向表中增加一列：`ALTER TABLE 表名 ADD 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student ADD phone VARCHAR(30);`\n#### 1.3.2 删\n向表中删除一列：`ALTER TABLE 表名 DROP 字段名; -- 例：ALTER TABLE student DROP phone;`\n#### 1.3.3 改\n修改表中的字段名：`ALTER TABLE 表名 CHANGE 字段名 新字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student CHANGE sname mname VARCHAR(30);`\n修改表中的字段中的变量类型和约束：`ALTER TABLE 表名 MODIFY 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student MODIFY sname VARCHAR(10);`\n修改表的字符集：`ALTER TABLE 表名 CHARACYER SET 编码; -- 例：ALTER TABLE student CHARACYER SET utf8;`\n\n## 2. DML（数据操作语言）\n### 2.1 增\n向表中插入一条数据（向表中插入所有字段可省略字段名）：`INSERT INFO 表名 (字段1，字段2) VALUES (值1，值2); -- 例：INSERT INFO student (name，age) VALUES ('张三'，18);` \n### 2.2 删\n删除表中的所有记录：`DELETE FROM 表名; -- 例：DELETE FROM student;`\n删除表中的某一条数据：`DELETE FROM 表名 WHERE 条件; -- 例：DELETE FROM student WHERE name='张三';`\n### 2.3 改\n修改表中所有指定字段的信息：`UPDATE 表名 SET 字段名='值'; -- 例：UPDATE student SET name='李四';`\n修改表中某一条数据的字段信息：`UPDATE 表名 SET 字段名='值' WHERE 条件; -- 例：UPDATE student SET name='李四' WHERE age=18;`  \n\n## 3. 约束\n主键约束（修饰的字段必须唯一且不能为空）：`PRIMARY KEY`\n自动增长约束：`AUTO_INCREMENT`\n\n## 4. 删除表所有数据的两种方式\n方式一：`DELETE FROM 表名; -- 例：DELETE FROM student;`（但是自动增长的值不会重置为1）\n方式二：`TRUNCATE TABLE 表名; -- 例：TRUNCATE TABLE student;`（先摧毁表，在重建表；自动增长的值会重置为1）\n\n## 5. DQL（数据查询语言）\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MySQL/运算符.png?raw=true \"运算符\")\n查询表中所有的数据：`SELECT * FROM 表名; -- 例：SELECT * FROM student;`\n查询表中某个字段的数据：`SELECT 字段名1,字段名2 FROM 表名; -- 例：SELECT name FROM student;`\n查询表中某个字段的数据并去重（存在多个字段时字段名1且字段名2相同时才会去重）：`SELECT DISTINCT 字段名1,字段名2 FROM 表名; -- 例：SELECT DISTINCT name FROM student;`\n别名查询：`SELECT 字段名 AS 别名 FROM student; -- 例：SELECT name AS 姓名 FROM student;`\n查询表中某个字段的所有数据：`SELECT * FROM 表名 WHERE 条件; -- 例：SELECT * FROM student WHERE name='张三';`\n\n\n\n","slug":"2019-4-16 MySQL","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzht000ass7dj35639db","content":"<p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true\" alt=\"markdown\" title=\"数据类型\"></p>\n<h2 id=\"1-DDL（数据定义语言）\"><a href=\"#1-DDL（数据定义语言）\" class=\"headerlink\" title=\"1. DDL（数据定义语言）\"></a>1. DDL（数据定义语言）</h2><h3 id=\"1-1-操作数据库\"><a href=\"#1-1-操作数据库\" class=\"headerlink\" title=\"1.1 操作数据库\"></a>1.1 操作数据库</h3><h4 id=\"1-1-1-增\"><a href=\"#1-1-1-增\" class=\"headerlink\" title=\"1.1.1 增\"></a>1.1.1 增</h4><p>创建数据库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式一：CREATE DATABASE 数据库名; -- 例：CREATE DATABASE mysql;</span><br><span class=\"line\">方式二：CREATE DATABASE 数据库名 CHARSET 编码; -- 例：CREATE DATABASE mysql CHARSET utf8;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"1-1-2-删\"><a href=\"#1-1-2-删\" class=\"headerlink\" title=\"1.1.2 删\"></a>1.1.2 删</h4><p>删除数据库：<code>DROP DATABASE 数据库名; -- 例：DROP DATABASE mysql;</code></p>\n<h4 id=\"1-1-3-改\"><a href=\"#1-1-3-改\" class=\"headerlink\" title=\"1.1.3 改\"></a>1.1.3 改</h4><p>修改正在使用的数据库：<code>USE 数据库名; -- 例：USE mysql;</code></p>\n<h4 id=\"1-1-4-查\"><a href=\"#1-1-4-查\" class=\"headerlink\" title=\"1.1.4 查\"></a>1.1.4 查</h4><p>查询正在使用的数据库：<code>SELECT DATABASE();</code><br>查询mysql中的所有数据库：<code>SHOW DATABASES;</code><br>查询某一个数据库的详细信息：<code>SHOW CREATE DATABASE 数据库名; -- 例：SHOW CREATE DATABASE  mysql;</code></p>\n<h3 id=\"1-2-操作数据库表\"><a href=\"#1-2-操作数据库表\" class=\"headerlink\" title=\"1.2 操作数据库表\"></a>1.2 操作数据库表</h3><h4 id=\"1-2-1-增\"><a href=\"#1-2-1-增\" class=\"headerlink\" title=\"1.2.1 增\"></a>1.2.1 增</h4><p>创建表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE 数据库名(</span><br><span class=\"line\">    字段名 数据类型(长度) 约束,</span><br><span class=\"line\">    字段名 数据类型(长度) 约束</span><br><span class=\"line\">);</span><br><span class=\"line\">例：</span><br><span class=\"line\">CREATE TABLE student(</span><br><span class=\"line\">    sid INT PRIMARY KEY, -- 主键约束</span><br><span class=\"line\">    sname VARCHAR(30),</span><br><span class=\"line\">    sage INT</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"1-2-2-删\"><a href=\"#1-2-2-删\" class=\"headerlink\" title=\"1.2.2 删\"></a>1.2.2 删</h4><p>删除表：<code>DROP TABLE 表名; -- 例：DROP TABLE student;</code></p>\n<h4 id=\"1-2-3-查\"><a href=\"#1-2-3-查\" class=\"headerlink\" title=\"1.2.3 查\"></a>1.2.3 查</h4><p>查看一个表的详细信息：<code>DESC 表名; -- 例：DESC student;</code><br>查看所有表：<code>SHOW TABLES;</code></p>\n<h4 id=\"1-2-4-改\"><a href=\"#1-2-4-改\" class=\"headerlink\" title=\"1.2.4 改\"></a>1.2.4 改</h4><p>修改表名：<code>RENAME TABLE 表名 TO 新表名; -- 例：RENAME TABLE student TO studentTwo;</code></p>\n<h3 id=\"1-3-操作数据库表结构\"><a href=\"#1-3-操作数据库表结构\" class=\"headerlink\" title=\"1.3 操作数据库表结构\"></a>1.3 操作数据库表结构</h3><h4 id=\"1-3-1-增\"><a href=\"#1-3-1-增\" class=\"headerlink\" title=\"1.3.1 增\"></a>1.3.1 增</h4><p>向表中增加一列：<code>ALTER TABLE 表名 ADD 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student ADD phone VARCHAR(30);</code></p>\n<h4 id=\"1-3-2-删\"><a href=\"#1-3-2-删\" class=\"headerlink\" title=\"1.3.2 删\"></a>1.3.2 删</h4><p>向表中删除一列：<code>ALTER TABLE 表名 DROP 字段名; -- 例：ALTER TABLE student DROP phone;</code></p>\n<h4 id=\"1-3-3-改\"><a href=\"#1-3-3-改\" class=\"headerlink\" title=\"1.3.3 改\"></a>1.3.3 改</h4><p>修改表中的字段名：<code>ALTER TABLE 表名 CHANGE 字段名 新字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student CHANGE sname mname VARCHAR(30);</code><br>修改表中的字段中的变量类型和约束：<code>ALTER TABLE 表名 MODIFY 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student MODIFY sname VARCHAR(10);</code><br>修改表的字符集：<code>ALTER TABLE 表名 CHARACYER SET 编码; -- 例：ALTER TABLE student CHARACYER SET utf8;</code></p>\n<h2 id=\"2-DML（数据操作语言）\"><a href=\"#2-DML（数据操作语言）\" class=\"headerlink\" title=\"2. DML（数据操作语言）\"></a>2. DML（数据操作语言）</h2><h3 id=\"2-1-增\"><a href=\"#2-1-增\" class=\"headerlink\" title=\"2.1 增\"></a>2.1 增</h3><p>向表中插入一条数据（向表中插入所有字段可省略字段名）：<code>INSERT INFO 表名 (字段1，字段2) VALUES (值1，值2); -- 例：INSERT INFO student (name，age) VALUES (&#39;张三&#39;，18);</code> </p>\n<h3 id=\"2-2-删\"><a href=\"#2-2-删\" class=\"headerlink\" title=\"2.2 删\"></a>2.2 删</h3><p>删除表中的所有记录：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code><br>删除表中的某一条数据：<code>DELETE FROM 表名 WHERE 条件; -- 例：DELETE FROM student WHERE name=&#39;张三&#39;;</code></p>\n<h3 id=\"2-3-改\"><a href=\"#2-3-改\" class=\"headerlink\" title=\"2.3 改\"></a>2.3 改</h3><p>修改表中所有指定字段的信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39;; -- 例：UPDATE student SET name=&#39;李四&#39;;</code><br>修改表中某一条数据的字段信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39; WHERE 条件; -- 例：UPDATE student SET name=&#39;李四&#39; WHERE age=18;</code>  </p>\n<h2 id=\"3-约束\"><a href=\"#3-约束\" class=\"headerlink\" title=\"3. 约束\"></a>3. 约束</h2><p>主键约束（修饰的字段必须唯一且不能为空）：<code>PRIMARY KEY</code><br>自动增长约束：<code>AUTO_INCREMENT</code></p>\n<h2 id=\"4-删除表所有数据的两种方式\"><a href=\"#4-删除表所有数据的两种方式\" class=\"headerlink\" title=\"4. 删除表所有数据的两种方式\"></a>4. 删除表所有数据的两种方式</h2><p>方式一：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code>（但是自动增长的值不会重置为1）<br>方式二：<code>TRUNCATE TABLE 表名; -- 例：TRUNCATE TABLE student;</code>（先摧毁表，在重建表；自动增长的值会重置为1）</p>\n<h2 id=\"5-DQL（数据查询语言）\"><a href=\"#5-DQL（数据查询语言）\" class=\"headerlink\" title=\"5. DQL（数据查询语言）\"></a>5. DQL（数据查询语言）</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MySQL/运算符.png?raw=true\" alt=\"markdown\" title=\"运算符\"><br>查询表中所有的数据：<code>SELECT * FROM 表名; -- 例：SELECT * FROM student;</code><br>查询表中某个字段的数据：<code>SELECT 字段名1,字段名2 FROM 表名; -- 例：SELECT name FROM student;</code><br>查询表中某个字段的数据并去重（存在多个字段时字段名1且字段名2相同时才会去重）：<code>SELECT DISTINCT 字段名1,字段名2 FROM 表名; -- 例：SELECT DISTINCT name FROM student;</code><br>别名查询：<code>SELECT 字段名 AS 别名 FROM student; -- 例：SELECT name AS 姓名 FROM student;</code><br>查询表中某个字段的所有数据：<code>SELECT * FROM 表名 WHERE 条件; -- 例：SELECT * FROM student WHERE name=&#39;张三&#39;;</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true\" alt=\"markdown\" title=\"数据类型\"></p>\n<h2 id=\"1-DDL（数据定义语言）\"><a href=\"#1-DDL（数据定义语言）\" class=\"headerlink\" title=\"1. DDL（数据定义语言）\"></a>1. DDL（数据定义语言）</h2><h3 id=\"1-1-操作数据库\"><a href=\"#1-1-操作数据库\" class=\"headerlink\" title=\"1.1 操作数据库\"></a>1.1 操作数据库</h3><h4 id=\"1-1-1-增\"><a href=\"#1-1-1-增\" class=\"headerlink\" title=\"1.1.1 增\"></a>1.1.1 增</h4><p>创建数据库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式一：CREATE DATABASE 数据库名; -- 例：CREATE DATABASE mysql;</span><br><span class=\"line\">方式二：CREATE DATABASE 数据库名 CHARSET 编码; -- 例：CREATE DATABASE mysql CHARSET utf8;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"1-1-2-删\"><a href=\"#1-1-2-删\" class=\"headerlink\" title=\"1.1.2 删\"></a>1.1.2 删</h4><p>删除数据库：<code>DROP DATABASE 数据库名; -- 例：DROP DATABASE mysql;</code></p>\n<h4 id=\"1-1-3-改\"><a href=\"#1-1-3-改\" class=\"headerlink\" title=\"1.1.3 改\"></a>1.1.3 改</h4><p>修改正在使用的数据库：<code>USE 数据库名; -- 例：USE mysql;</code></p>\n<h4 id=\"1-1-4-查\"><a href=\"#1-1-4-查\" class=\"headerlink\" title=\"1.1.4 查\"></a>1.1.4 查</h4><p>查询正在使用的数据库：<code>SELECT DATABASE();</code><br>查询mysql中的所有数据库：<code>SHOW DATABASES;</code><br>查询某一个数据库的详细信息：<code>SHOW CREATE DATABASE 数据库名; -- 例：SHOW CREATE DATABASE  mysql;</code></p>\n<h3 id=\"1-2-操作数据库表\"><a href=\"#1-2-操作数据库表\" class=\"headerlink\" title=\"1.2 操作数据库表\"></a>1.2 操作数据库表</h3><h4 id=\"1-2-1-增\"><a href=\"#1-2-1-增\" class=\"headerlink\" title=\"1.2.1 增\"></a>1.2.1 增</h4><p>创建表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE 数据库名(</span><br><span class=\"line\">    字段名 数据类型(长度) 约束,</span><br><span class=\"line\">    字段名 数据类型(长度) 约束</span><br><span class=\"line\">);</span><br><span class=\"line\">例：</span><br><span class=\"line\">CREATE TABLE student(</span><br><span class=\"line\">    sid INT PRIMARY KEY, -- 主键约束</span><br><span class=\"line\">    sname VARCHAR(30),</span><br><span class=\"line\">    sage INT</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"1-2-2-删\"><a href=\"#1-2-2-删\" class=\"headerlink\" title=\"1.2.2 删\"></a>1.2.2 删</h4><p>删除表：<code>DROP TABLE 表名; -- 例：DROP TABLE student;</code></p>\n<h4 id=\"1-2-3-查\"><a href=\"#1-2-3-查\" class=\"headerlink\" title=\"1.2.3 查\"></a>1.2.3 查</h4><p>查看一个表的详细信息：<code>DESC 表名; -- 例：DESC student;</code><br>查看所有表：<code>SHOW TABLES;</code></p>\n<h4 id=\"1-2-4-改\"><a href=\"#1-2-4-改\" class=\"headerlink\" title=\"1.2.4 改\"></a>1.2.4 改</h4><p>修改表名：<code>RENAME TABLE 表名 TO 新表名; -- 例：RENAME TABLE student TO studentTwo;</code></p>\n<h3 id=\"1-3-操作数据库表结构\"><a href=\"#1-3-操作数据库表结构\" class=\"headerlink\" title=\"1.3 操作数据库表结构\"></a>1.3 操作数据库表结构</h3><h4 id=\"1-3-1-增\"><a href=\"#1-3-1-增\" class=\"headerlink\" title=\"1.3.1 增\"></a>1.3.1 增</h4><p>向表中增加一列：<code>ALTER TABLE 表名 ADD 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student ADD phone VARCHAR(30);</code></p>\n<h4 id=\"1-3-2-删\"><a href=\"#1-3-2-删\" class=\"headerlink\" title=\"1.3.2 删\"></a>1.3.2 删</h4><p>向表中删除一列：<code>ALTER TABLE 表名 DROP 字段名; -- 例：ALTER TABLE student DROP phone;</code></p>\n<h4 id=\"1-3-3-改\"><a href=\"#1-3-3-改\" class=\"headerlink\" title=\"1.3.3 改\"></a>1.3.3 改</h4><p>修改表中的字段名：<code>ALTER TABLE 表名 CHANGE 字段名 新字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student CHANGE sname mname VARCHAR(30);</code><br>修改表中的字段中的变量类型和约束：<code>ALTER TABLE 表名 MODIFY 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student MODIFY sname VARCHAR(10);</code><br>修改表的字符集：<code>ALTER TABLE 表名 CHARACYER SET 编码; -- 例：ALTER TABLE student CHARACYER SET utf8;</code></p>\n<h2 id=\"2-DML（数据操作语言）\"><a href=\"#2-DML（数据操作语言）\" class=\"headerlink\" title=\"2. DML（数据操作语言）\"></a>2. DML（数据操作语言）</h2><h3 id=\"2-1-增\"><a href=\"#2-1-增\" class=\"headerlink\" title=\"2.1 增\"></a>2.1 增</h3><p>向表中插入一条数据（向表中插入所有字段可省略字段名）：<code>INSERT INFO 表名 (字段1，字段2) VALUES (值1，值2); -- 例：INSERT INFO student (name，age) VALUES (&#39;张三&#39;，18);</code> </p>\n<h3 id=\"2-2-删\"><a href=\"#2-2-删\" class=\"headerlink\" title=\"2.2 删\"></a>2.2 删</h3><p>删除表中的所有记录：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code><br>删除表中的某一条数据：<code>DELETE FROM 表名 WHERE 条件; -- 例：DELETE FROM student WHERE name=&#39;张三&#39;;</code></p>\n<h3 id=\"2-3-改\"><a href=\"#2-3-改\" class=\"headerlink\" title=\"2.3 改\"></a>2.3 改</h3><p>修改表中所有指定字段的信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39;; -- 例：UPDATE student SET name=&#39;李四&#39;;</code><br>修改表中某一条数据的字段信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39; WHERE 条件; -- 例：UPDATE student SET name=&#39;李四&#39; WHERE age=18;</code>  </p>\n<h2 id=\"3-约束\"><a href=\"#3-约束\" class=\"headerlink\" title=\"3. 约束\"></a>3. 约束</h2><p>主键约束（修饰的字段必须唯一且不能为空）：<code>PRIMARY KEY</code><br>自动增长约束：<code>AUTO_INCREMENT</code></p>\n<h2 id=\"4-删除表所有数据的两种方式\"><a href=\"#4-删除表所有数据的两种方式\" class=\"headerlink\" title=\"4. 删除表所有数据的两种方式\"></a>4. 删除表所有数据的两种方式</h2><p>方式一：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code>（但是自动增长的值不会重置为1）<br>方式二：<code>TRUNCATE TABLE 表名; -- 例：TRUNCATE TABLE student;</code>（先摧毁表，在重建表；自动增长的值会重置为1）</p>\n<h2 id=\"5-DQL（数据查询语言）\"><a href=\"#5-DQL（数据查询语言）\" class=\"headerlink\" title=\"5. DQL（数据查询语言）\"></a>5. DQL（数据查询语言）</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MySQL/运算符.png?raw=true\" alt=\"markdown\" title=\"运算符\"><br>查询表中所有的数据：<code>SELECT * FROM 表名; -- 例：SELECT * FROM student;</code><br>查询表中某个字段的数据：<code>SELECT 字段名1,字段名2 FROM 表名; -- 例：SELECT name FROM student;</code><br>查询表中某个字段的数据并去重（存在多个字段时字段名1且字段名2相同时才会去重）：<code>SELECT DISTINCT 字段名1,字段名2 FROM 表名; -- 例：SELECT DISTINCT name FROM student;</code><br>别名查询：<code>SELECT 字段名 AS 别名 FROM student; -- 例：SELECT name AS 姓名 FROM student;</code><br>查询表中某个字段的所有数据：<code>SELECT * FROM 表名 WHERE 条件; -- 例：SELECT * FROM student WHERE name=&#39;张三&#39;;</code></p>\n"},{"layout":"post","title":"MAC 安装Tomcat","date":"2019-04-18T07:13:50.000Z","_content":"\n## 1. 下载[Tomcat](https://tomcat.apache.org/download-90.cgi) 如图\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/下载Tomcat.png?raw=true \"下载Tomcat\")\n## 2. 解压并用重命名为Tomcat\n## 3. 用终端(Terminal) 进入 `$ cd Tomcat/bin` \n## 4. 启动Tomcat `$ sudo ./startup.sh`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/启动.png?raw=true \"启动\")\n## 5. 关闭Tomcat `$ ./shutdown.sh`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/关闭.png?raw=true \"关闭\")\n\n\n\n\n","source":"_posts/2019-4-18 MAC 安装Tomcat.md","raw":"---\nlayout: post\ntitle: \"MAC 安装Tomcat\"\ndate: 2019-04-18 15:13:50\ntags: Git\n---\n\n## 1. 下载[Tomcat](https://tomcat.apache.org/download-90.cgi) 如图\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/下载Tomcat.png?raw=true \"下载Tomcat\")\n## 2. 解压并用重命名为Tomcat\n## 3. 用终端(Terminal) 进入 `$ cd Tomcat/bin` \n## 4. 启动Tomcat `$ sudo ./startup.sh`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/启动.png?raw=true \"启动\")\n## 5. 关闭Tomcat `$ ./shutdown.sh`\n![markdown](https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/关闭.png?raw=true \"关闭\")\n\n\n\n\n","slug":"2019-4-18 MAC 安装Tomcat","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzi2000dss7dt0nu922j","content":"<h2 id=\"1-下载Tomcat-如图\"><a href=\"#1-下载Tomcat-如图\" class=\"headerlink\" title=\"1. 下载Tomcat 如图\"></a>1. 下载<a href=\"https://tomcat.apache.org/download-90.cgi\" target=\"_blank\" rel=\"noopener\">Tomcat</a> 如图</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/下载Tomcat.png?raw=true\" alt=\"markdown\" title=\"下载Tomcat\"></p>\n<h2 id=\"2-解压并用重命名为Tomcat\"><a href=\"#2-解压并用重命名为Tomcat\" class=\"headerlink\" title=\"2. 解压并用重命名为Tomcat\"></a>2. 解压并用重命名为Tomcat</h2><h2 id=\"3-用终端-Terminal-进入-cd-Tomcat-bin\"><a href=\"#3-用终端-Terminal-进入-cd-Tomcat-bin\" class=\"headerlink\" title=\"3. 用终端(Terminal) 进入 $ cd Tomcat/bin\"></a>3. 用终端(Terminal) 进入 <code>$ cd Tomcat/bin</code></h2><h2 id=\"4-启动Tomcat-sudo-startup-sh\"><a href=\"#4-启动Tomcat-sudo-startup-sh\" class=\"headerlink\" title=\"4. 启动Tomcat $ sudo ./startup.sh\"></a>4. 启动Tomcat <code>$ sudo ./startup.sh</code></h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/启动.png?raw=true\" alt=\"markdown\" title=\"启动\"></p>\n<h2 id=\"5-关闭Tomcat-shutdown-sh\"><a href=\"#5-关闭Tomcat-shutdown-sh\" class=\"headerlink\" title=\"5. 关闭Tomcat $ ./shutdown.sh\"></a>5. 关闭Tomcat <code>$ ./shutdown.sh</code></h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/关闭.png?raw=true\" alt=\"markdown\" title=\"关闭\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-下载Tomcat-如图\"><a href=\"#1-下载Tomcat-如图\" class=\"headerlink\" title=\"1. 下载Tomcat 如图\"></a>1. 下载<a href=\"https://tomcat.apache.org/download-90.cgi\" target=\"_blank\" rel=\"noopener\">Tomcat</a> 如图</h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/下载Tomcat.png?raw=true\" alt=\"markdown\" title=\"下载Tomcat\"></p>\n<h2 id=\"2-解压并用重命名为Tomcat\"><a href=\"#2-解压并用重命名为Tomcat\" class=\"headerlink\" title=\"2. 解压并用重命名为Tomcat\"></a>2. 解压并用重命名为Tomcat</h2><h2 id=\"3-用终端-Terminal-进入-cd-Tomcat-bin\"><a href=\"#3-用终端-Terminal-进入-cd-Tomcat-bin\" class=\"headerlink\" title=\"3. 用终端(Terminal) 进入 $ cd Tomcat/bin\"></a>3. 用终端(Terminal) 进入 <code>$ cd Tomcat/bin</code></h2><h2 id=\"4-启动Tomcat-sudo-startup-sh\"><a href=\"#4-启动Tomcat-sudo-startup-sh\" class=\"headerlink\" title=\"4. 启动Tomcat $ sudo ./startup.sh\"></a>4. 启动Tomcat <code>$ sudo ./startup.sh</code></h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/启动.png?raw=true\" alt=\"markdown\" title=\"启动\"></p>\n<h2 id=\"5-关闭Tomcat-shutdown-sh\"><a href=\"#5-关闭Tomcat-shutdown-sh\" class=\"headerlink\" title=\"5. 关闭Tomcat $ ./shutdown.sh\"></a>5. 关闭Tomcat <code>$ ./shutdown.sh</code></h2><p><img src=\"https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/关闭.png?raw=true\" alt=\"markdown\" title=\"关闭\"></p>\n"},{"layout":"post","title":"MAC 显示或隐藏.git目录","date":"2019-04-17T03:08:22.000Z","_content":"\n## 1. 显示.git目录：`$ defaults write com.apple.finder AppleShowAllFiles TRUE`\n\n## 2. 隐藏.git目录：`$ defaults write com.apple.finder AppleShowAllFiles FALSE`\n\n## 3. 重启Finder：`$ killall Finder`\n\n## 4. 当你的git仓库中还存在另一个git仓库B，提交时报错`changes not staged for commit`，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可\n\n\n\n\n","source":"_posts/2019-4-17 MAC 显示或隐藏.git目录.md","raw":"---\nlayout: post\ntitle: \"MAC 显示或隐藏.git目录\"\ndate: 2019-04-17 11:08:22\ntags: Git\n---\n\n## 1. 显示.git目录：`$ defaults write com.apple.finder AppleShowAllFiles TRUE`\n\n## 2. 隐藏.git目录：`$ defaults write com.apple.finder AppleShowAllFiles FALSE`\n\n## 3. 重启Finder：`$ killall Finder`\n\n## 4. 当你的git仓库中还存在另一个git仓库B，提交时报错`changes not staged for commit`，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可\n\n\n\n\n","slug":"2019-4-17 MAC 显示或隐藏.git目录","published":1,"updated":"2019-04-22T08:26:04.329Z","comments":1,"photos":[],"link":"","_id":"cjus3pzi6000fss7d5looga38","content":"<h2 id=\"1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE\"><a href=\"#1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE\" class=\"headerlink\" title=\"1. 显示.git目录：$ defaults write com.apple.finder AppleShowAllFiles TRUE\"></a>1. 显示.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles TRUE</code></h2><h2 id=\"2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE\"><a href=\"#2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE\" class=\"headerlink\" title=\"2. 隐藏.git目录：$ defaults write com.apple.finder AppleShowAllFiles FALSE\"></a>2. 隐藏.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles FALSE</code></h2><h2 id=\"3-重启Finder：-killall-Finder\"><a href=\"#3-重启Finder：-killall-Finder\" class=\"headerlink\" title=\"3. 重启Finder：$ killall Finder\"></a>3. 重启Finder：<code>$ killall Finder</code></h2><h2 id=\"4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可\"><a href=\"#4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可\" class=\"headerlink\" title=\"4. 当你的git仓库中还存在另一个git仓库B，提交时报错changes not staged for commit，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可\"></a>4. 当你的git仓库中还存在另一个git仓库B，提交时报错<code>changes not staged for commit</code>，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE\"><a href=\"#1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE\" class=\"headerlink\" title=\"1. 显示.git目录：$ defaults write com.apple.finder AppleShowAllFiles TRUE\"></a>1. 显示.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles TRUE</code></h2><h2 id=\"2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE\"><a href=\"#2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE\" class=\"headerlink\" title=\"2. 隐藏.git目录：$ defaults write com.apple.finder AppleShowAllFiles FALSE\"></a>2. 隐藏.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles FALSE</code></h2><h2 id=\"3-重启Finder：-killall-Finder\"><a href=\"#3-重启Finder：-killall-Finder\" class=\"headerlink\" title=\"3. 重启Finder：$ killall Finder\"></a>3. 重启Finder：<code>$ killall Finder</code></h2><h2 id=\"4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可\"><a href=\"#4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可\" class=\"headerlink\" title=\"4. 当你的git仓库中还存在另一个git仓库B，提交时报错changes not staged for commit，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可\"></a>4. 当你的git仓库中还存在另一个git仓库B，提交时报错<code>changes not staged for commit</code>，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可</h2>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjus3pzhe0004ss7dcqaa0s62","tag_id":"cjus3pzh90002ss7d1ewd1rlb","_id":"cjus3pzhq0007ss7d7zqt5o22"},{"post_id":"cjus3pzgt0000ss7doanpmzg0","tag_id":"cjus3pzh90002ss7d1ewd1rlb","_id":"cjus3pzht0009ss7d4egkjwzi"},{"post_id":"cjus3pzhg0005ss7ddp9fgt77","tag_id":"cjus3pzh90002ss7d1ewd1rlb","_id":"cjus3pzi1000css7durzv2y5x"},{"post_id":"cjus3pzhq0008ss7dxyefnukb","tag_id":"cjus3pzh90002ss7d1ewd1rlb","_id":"cjus3pzi6000ess7d72tack3l"},{"post_id":"cjus3pzh50001ss7d0zjua9ya","tag_id":"cjus3pzhm0006ss7d3a6103l1","_id":"cjus3pzia000hss7duvlp3nhc"},{"post_id":"cjus3pzhc0003ss7dknbw8r6f","tag_id":"cjus3pzh90002ss7d1ewd1rlb","_id":"cjus3pzib000iss7duzec1996"},{"post_id":"cjus3pzht000ass7dj35639db","tag_id":"cjus3pzi8000gss7d2p8gkjvh","_id":"cjus3pzic000kss7d3jhaymls"},{"post_id":"cjus3pzi2000dss7dt0nu922j","tag_id":"cjus3pzib000jss7dee5ttjj3","_id":"cjus3pzie000mss7d3ps6018m"},{"post_id":"cjus3pzi6000fss7d5looga38","tag_id":"cjus3pzib000jss7dee5ttjj3","_id":"cjus3pzih000nss7dcctedjnk"}],"Tag":[{"name":"iOS","_id":"cjus3pzh90002ss7d1ewd1rlb"},{"name":"Hexo","_id":"cjus3pzhm0006ss7d3a6103l1"},{"name":"MySQL","_id":"cjus3pzi8000gss7d2p8gkjvh"},{"name":"Git","_id":"cjus3pzib000jss7dee5ttjj3"}]}}